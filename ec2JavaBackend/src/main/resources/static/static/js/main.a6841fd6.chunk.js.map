{"version":3,"sources":["static/Simple Social Network.svg","reducers/postReducer.js","reducers/accountAccessReducer.js","reducers/navigationReducer.js","reducers/popoutReducer.js","reducers/friendReducer.js","reducers/userReducer.js","reducers/imageReducer.js","reducers/index.js","actions/types.js","store.js","appTheme.js","components/AccountAccess/AccountCreator.js","actions/accountAccessActions.js","components/AccountAccess/LoginComponent.js","actions/friendActions.js","actions/navigationActions.js","actions/popoutActions.js","actions/imageActions.js","components/ImageComponents/ProfilePic.js","components/PostComponents/CommentForm.js","actions/postActions.js","components/PostComponents/CommentObject.js","components/PostComponents/PostObject.js","components/PostComponents/PostForm.js","components/HeaderComponents/FriendMenuItem.js","components/UserProfileComponents/FriendsBox.js","components/Display/UserProfile.js","actions/userActions.js","components/Display/Home.js","components/Display/NotificationPostPage.js","components/Display/DisplayArea.js","components/HeaderComponents/OptionsMenu.js","components/HeaderComponents/NotificationItem.js","components/HeaderComponents/NotificationsMenu.js","components/HeaderComponents/UserSearcher.js","components/HeaderComponents/FriendsMenu.js","components/HeaderComponents/Header.js","components/PopoutComponents/PopoutContainer.js","components/ImageComponents/ImageFetcher.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","updatePostTrigger","newsFeedPostLookup","newsFeedToken","notificationPostLookup","accountCreated","isLoggedIn","authToken","failureReason","activeUser","updates","notifications","notificationsPageToken","displayPage","anchorElement","content","offset","trigger","friendRequests","requestPageToken","friendsMenuTrigger","userSearchResults","requestedImages","requestCounterTrigger","combineReducers","posts","_objectSpread5","_objectSpread7","_objectSpread8","_objectSpread9","targetUser","postKey","targetPostComments","targetUserPosts","state","arguments","length","undefined","action","type","_objectSpread2","userUuid","postObjects","pop","payload","owner","Object","objectSpread","defineProperty","assign","_objectSpread3","currentPosts","concat","tempState","tempPostLookup","forEach","post","push","pageToken","when","nextPageToken","newPost","newComment","currentComments","comments","numOfComments","commentPageToken","liked","numOfLikes","commentKey","accountAccess","numOfFriendRequests","numOfNewFriendRequests","profilePic","s3ImgUri","navigation","popout","anchorEl","friendAccess","targetUserFriends","friends","requestKey","accepted","currentFriendsArray","since","users","currentProfile","profileData","relationshipStatus","newStatus","bio","newBioContent","profilePicUri","images","localImgUrl","currentRequests","currentProfilePicUri","middleware","thunk","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","apply","createMuiTheme","palette","primary","deepPurple","secondary","yellow","background","default","typography","useNextVariants","AccountCreator","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","email","firstName","lastName","password","password2","passLengthError","passMatchError","validEmailError","existingEmailError","firstNameLengthError","lastNameLengthError","onChange","bind","assertThisInitialized","onSubmit","validateEmailSyntax","checkExistingAccount","e","setState","target","name","value","_this2","preventDefault","then","response","userData","createAccount","test","String","toLowerCase","headers","Headers","append","fetch","method","body","text","classes","react_default","a","createElement","Grid","container","alignContent","direction","Paper","className","title","AccountCreator_EmailInput","textFieldContainer","AccountCreator_NameInput","label","nameLengthError","nameType","nameValue","AccountCreator_PasswordInput","AccountCreator_PasswordConfirmInput","Button","submitButton","onClick","Component","EmailInput","TextField","error","required","variant","helperText","InputProps","input","textField","NameInput","PasswordInput","PasswordConfirmInput","compose","withStyles","theme","padding","fontFamily","fontSize","color","main","paddingTop","errorText","backgroundColor","marginTop","connect","data","dispatch","Content-Type","JSON","stringify","status","LoginComponent","login","nonExistingEmailError","invalidPasswordError","updateTrigger","document","getElementById","addEventListener","code","_this3","removeEventListener","prevProps","prevState","snapshot","loginSuccessful","subTitle","LoginComponent_MessageBox","margin","InputLabelProps","shrink","autoFocus","id","loginButton","MessageBox","authenticationHeaders","responseMessage","rawToken","get","justJWT","replace","decoded","JWT","decode","uuid","UUID","FIRST_NAME","LAST_NAME","fetchUserFriends","res","json","respondToRequest","sendingUser","navigateTo","destination","openPopout","fetchImage","s3ImageUri","blob","imgUrl","window","URL","createObjectURL","ProfilePic","displayAvatar","imageRepo","requestImageFetch","buttonStyle","avatar","styleOverride","noPicOverrideMessage","IconButton_IconButton","avatarButton","Avatar_default","userFirstName","charAt","toUpperCase","src","noButton","clickable","uri","CommentForm","createComment","postOwnerUuid","postUuid","renderAvatar","ImageComponents_ProfilePic","renderTextField","textInnerContainer","ref","setTextFieldRef","InputBase","placeholder","multiline","fullWidth","autoComplete","rowsMax","Grid_default","justify","item","xs","textContainer","ButtonBase","sendButton","SendRounded_default","sendIcon","maxWidth","maxHeight","borderRadius","paddingLeft","paddingRight","paddingBottom","minHeight","minWidth","marginLeft","height","width","commentText","targetPost","CommentObject","updateCommentState","comment","whenPosted","howLongAgo","Date","now","Math","pow","floor","toString","activeUserLiked","toggleLike","unlikeComment","postOwner","commentUuid","likeComment","posterProfilePicUri","likeButton","Fragment","IconButton_default","Badge","badgeContent","Grow_default","in","Favorite_default","FavoriteBorder_default","renderTextBubble","commentTitle","substring","cursor","targetComment","PostObject","updatePostState","toDateString","showComments","commentFetching","unlikePost","likePost","toggleCommentsSection","fetchComments","fetchPostComments","postAvatar","postTitle","ownerFirstName","postSubheader","textSubheaderFont","actionButton","postBody","textBodyFont","imageBody","style","alt","commentButton","CommentRounded_default","commentSection","data-simplebar","commentsContainer","alignItems","PostComponents_CommentForm","map","index","key","commentSectionItem","PostComponents_CommentObject","moreCommentsButton","commentsIcon","postContainer","innerContainer","Card_default","CardHeader_default","postHeader","subheader","CardContent_default","CardActions_default","postFooter","sideIconSpace","middleIconSpace","commentsSection","marginBottom","postOptions","flexGrow","zIndex","position","bottom","shareIcon","marginRight","PostForm","node","textFieldRef","setFormRef","formRef","startClickListening","handleClick","stopClickListening","openEditImageDialog","contains","enableEditing","disableEditing","editMode","openImageDialog","closeImageDialog","removeImage","imageFile","imagePreviewUrl","showFriends","showEveryone","disableShareToEveryone","switchChange","files","createPost","checked","renderAddImage","display","accept","fileInput","click","addPhotoSmallButton","AddPhotoAlternate_default","imageArea","CardActionArea","addPhotoArea","addPhotoText","renderPrivacySwitches","spacing","privacyLabel","switchLabelText","Switch","switchLabelTextDisabled","disabled","formContainer","avatarContainerEditing","headerTitle","avatarContainerDefault","addPhotoIcon","Dialog","open","onClose","DialogTitle","formCard","formHeader","grey","postData","image","FormData","FriendMenuItem","setButtonRef","buttonRef","userObject","requestActions","user","numOfMutualFriends","actionsContainer","activeUserUuid","acceptButton","ignoreButton","mainContainer","textTransform","A400","FriendsBox","openMenu","closeMenu","friendsRepo","friendObjects","shortArray","toConsumableArray","sliceMax","openMenuButton","seeMoreFriendsButton","Card_Card","friendsBox","CardHeader_CardHeader","boxHeader","CardContent_CardContent","boxContent","slice","friendObject","boxPicItemContainer","boxPicItem","targetFirstName","scrollable","MenuList_default","MenuItem_default","menuItem","HeaderComponents_FriendMenuItem","menuTitle","UserProfile","editBio","editingBio","setBioBoxRef","bioBoxRef","fetchUserProfile","saveNewBio","startScrollListening","handleScroll","stopScrollListening","innerHeight","pageYOffset","offsetHeight","shouldFetch","postRepo","fetchUserPosts","previewProfilePic","previewingProfilePic","submitProfilePic","file","saveNewProfilePic","closeProfilePicPreview","userProfileRepo","userProfile","PostComponents_PostObject","fullName","relationshipActions","addFriendButton","sendFriendRequest","PersonAddRounded_default","addFriendIcon","greyStyle","currentTarget","index_es","MenuItem","popoutButton","deleteFriendRequest","ArrowDropDown_default","dropIcon","friendsButton","unfriend","ignoredButton","profilePicture","editBioButton","editButtons","bioBox","maxLength","UserProfileComponents_FriendsBox","sideColumn","postsColumn","nameContainer","profileName","PostComponents_PostForm","photosBox","A200","textColor","profile","Home","fetchNewsFeed","lookupData","feedPost","NotificationPostPage","postObject","DisplayArea","AccountAccess_AccountCreator","Display_Home","AccountAccess_LoginComponent","Display_NotificationPostPage","Display_UserProfile","OptionsMenu","logout","menuBackground","NotificationItem","happenedWhen","notification","notificationAvatar","actionUserS3Uri","actionUserFirstName","notificationTitle","fetchPost","NotificationsMenu","fetchNotifications","waitForTrigger","waitToRender","notificationsItems","Avatar_Avatar","children","SentimentDissatisfiedRounded_default","HeaderComponents_NotificationItem","loadMoreNotificationsButton","UserSearcher","searchUsers","componentContainer","disableRipple","SearchRounded_default","searchText","searchResults","FriendsMenu","fetchFriendRequests","friendRepo","searchItems","result","requestItems","request","sectionTitle","Divider","HeaderComponents_UserSearcher","styles","headerStyles","logoButton","icon","chatIcon","homeButton","userAvatar","Header","openFriendsFinder","HeaderComponents_FriendsMenu","openNotifications","HeaderComponents_NotificationsMenu","numOfNewNotifications","goHome","loggedIn","intervalVar","updateActiveUser","setInterval","clearInterval","renderLogin","Button_default","size","renderUserIcons","Typography_default","Badge_default","People_default","Notifications_default","HeaderComponents_OptionsMenu","AppBar_default","Toolbar_default","x1","logo","PopoutContainer","setArrowRef","arrowRef","setPopoutRef","popoutRef","Popper_default","placement","disablePortal","popper","modifiers","preventOverflow","enabled","boundariesElement","arrow","element","React","&[x-placement*=\"bottom\"] $arrow","top","left","&::before","borderWidth","borderColor","&[x-placement*=\"top\"] $arrow","&[x-placement*=\"right\"] $arrow","&[x-placement*=\"left\"] $arrow","right","borderStyle","ImageFetcher","fetching","shift","App","es","core_styles","CssBaseline_default","HeaderComponents_Header","headerMargin","Display_DisplayArea","PopoutComponents_PopoutContainer","ImageComponents_ImageFetcher","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6841fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Simple Social Network.8d2b3480.svg\";","import {\r\n    FETCH_NEWS_FEED, FETCH_POST,\r\n    FETCH_POST_COMMENTS,\r\n    FETCH_USER_POSTS, LIKE_COMMENT,\r\n    LIKE_POST,\r\n    LOGOUT, NAVIGATE_TO,\r\n    NEW_COMMENT,\r\n    NEW_POST, UNLIKE_COMMENT, UNLIKE_POST\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    updatePostTrigger: false,\r\n    newsFeedPostLookup: [],\r\n    newsFeedToken: \"0\",\r\n    notificationPostLookup: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    let targetUser;\r\n    let postKey;\r\n    let targetPostComments;\r\n    let targetUserPosts;\r\n    switch(action.type) {\r\n        case FETCH_POST:\r\n            if(state.notificationPostLookup !== null) {\r\n                state[state.notificationPostLookup.userUuid].postObjects.pop();\r\n                if(state[state.notificationPostLookup.userUuid].postObjects.length === 0) {\r\n                    state[state.notificationPostLookup.userUuid] = undefined;\r\n                }\r\n            }\r\n            targetUser = action.payload[0].owner;\r\n            if(state[targetUser] === undefined) {\r\n                targetUserPosts = action.payload;\r\n                return {\r\n                    ...state,\r\n                    [targetUser]: Object.assign({}, { postObjects:targetUserPosts }),\r\n                    notificationPostLookup: {userUuid: targetUser, postKey: targetUserPosts.length-1}\r\n                };\r\n            } else {\r\n                let currentPosts = state[targetUser].postObjects;\r\n                targetUserPosts = currentPosts.concat(action.payload);\r\n                return {\r\n                    ...state,\r\n                    [targetUser]: Object.assign(state[targetUser], { postObjects:targetUserPosts }),\r\n                    notificationPostLookup: {userUuid: targetUser, postKey: targetUserPosts.length-1}\r\n                };\r\n            }\r\n        case NAVIGATE_TO:\r\n            if(state.notificationPostLookup !== null) {\r\n                state[state.notificationPostLookup.userUuid].postObjects.pop();\r\n                if(state[state.notificationPostLookup.userUuid].postObjects.length === 0) {\r\n                    state[state.notificationPostLookup.userUuid] = undefined;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                notificationPostLookup: null\r\n            };\r\n        case FETCH_NEWS_FEED:\r\n            let tempState = state;\r\n            let tempPostLookup = [];\r\n            let feedCopy = action.payload.posts;\r\n            feedCopy.forEach((post) => {\r\n                targetUser = post.owner;\r\n                if(tempState[targetUser] == null) {\r\n                    targetUserPosts = [];\r\n                    targetUserPosts.push(post);\r\n                    tempState[targetUser] = {pageToken: post.when, postObjects: targetUserPosts};\r\n                } else {\r\n                    let currentPosts = tempState[targetUser].postObjects;\r\n                    currentPosts.push(post);\r\n                    targetUserPosts = currentPosts;\r\n                    tempState[targetUser] = Object.assign(tempState[targetUser], {\r\n                        pageToken: post.when,\r\n                        postObjects: targetUserPosts\r\n                    });\r\n                }\r\n                tempPostLookup.push({userUuid: post.owner, postKey: targetUserPosts.length-1});\r\n            });\r\n\r\n            tempState.newsFeedPostLookup = state.newsFeedPostLookup.concat(tempPostLookup);\r\n            tempState.newsFeedToken = action.payload.nextPageToken;\r\n\r\n            return {\r\n                ...state,\r\n                updatePostTrigger: !state.updatePostTrigger\r\n            };\r\n        case NEW_POST:\r\n            targetUser = action.payload.targetUser;\r\n            if(state[targetUser] == null) {\r\n                targetUserPosts = action.payload.newPost;\r\n            } else {\r\n                let currentPosts = state[targetUser].postObjects;\r\n                targetUserPosts =  action.payload.newPost.concat(currentPosts);\r\n            }\r\n            return {\r\n                ...state,\r\n                [targetUser]: {pageToken: action.payload.newPost.when, postObjects: targetUserPosts}\r\n            };\r\n        case FETCH_USER_POSTS:\r\n            targetUser = action.payload.targetUser;\r\n            if(state[targetUser] == null) {\r\n                targetUserPosts = action.payload.posts;\r\n            } else {\r\n                let currentPosts = state[targetUser].postObjects;\r\n                targetUserPosts = currentPosts.concat(action.payload.posts);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                [targetUser]: {pageToken: action.payload.nextPageToken, postObjects: targetUserPosts},\r\n                updatePostTrigger: !state.updatePostTrigger\r\n            };\r\n        case NEW_COMMENT:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n            if(state[targetUser] == null) {\r\n                targetPostComments = action.payload.newComment;\r\n            } else {\r\n                let currentComments = state[targetUser].postObjects[postKey].comments;\r\n                if(currentComments === undefined) {\r\n                    targetPostComments = action.payload.newComment;\r\n                } else {\r\n                    targetPostComments =  action.payload.newComment.concat(currentComments);\r\n                }\r\n            }\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetUserPosts[postKey].comments = targetPostComments;\r\n            targetUserPosts[postKey].numOfComments = targetUserPosts[postKey].numOfComments+1;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts})\r\n            };\r\n        case FETCH_POST_COMMENTS:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n            if(state[targetUser] == null) {\r\n                return state;\r\n            } else if(state[targetUser].postObjects[postKey].comments === undefined) {\r\n                targetPostComments = action.payload.comments;\r\n            } else {\r\n                let currentComments = state[targetUser].postObjects[postKey].comments;\r\n                targetPostComments = currentComments.concat(action.payload.comments);\r\n            }\r\n\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetUserPosts[postKey].comments = targetPostComments;\r\n            targetUserPosts[postKey].commentPageToken = action.payload.nextPageToken;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts}),\r\n                updatePostTrigger: !state.updatePostTrigger\r\n            };\r\n        case LIKE_POST:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetUserPosts[postKey].liked = true;\r\n            targetUserPosts[postKey].numOfLikes = targetUserPosts[postKey].numOfLikes+1;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts}),\r\n                updatePostTrigger: !state.updatePostTrigger\r\n            };\r\n        case UNLIKE_POST:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetUserPosts[postKey].liked = false;\r\n            targetUserPosts[postKey].numOfLikes = targetUserPosts[postKey].numOfLikes-1;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts}),\r\n                updatePostTrigger: !state.updatePostTrigger\r\n            };\r\n        case LIKE_COMMENT:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetPostComments = state[targetUser].postObjects[postKey].comments;\r\n            targetPostComments[action.payload.commentKey].liked = true;\r\n            targetPostComments[action.payload.commentKey].numOfLikes = targetPostComments[action.payload.commentKey].numOfLikes+1;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts})\r\n            };\r\n        case UNLIKE_COMMENT:\r\n            targetUser = action.payload.targetUser;\r\n            postKey = action.payload.postKey;\r\n\r\n            targetUserPosts = state[targetUser].postObjects;\r\n            targetPostComments = state[targetUser].postObjects[postKey].comments;\r\n            targetPostComments[action.payload.commentKey].liked = false;\r\n            targetPostComments[action.payload.commentKey].numOfLikes = targetPostComments[action.payload.commentKey].numOfLikes-1;\r\n            return {\r\n                ...state,\r\n                [targetUser]: Object.assign(state[targetUser], {postObjects: targetUserPosts})\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CREATE_ACCOUNT,\r\n    LOGIN,\r\n    LOGIN_FAILED,\r\n    LOGOUT,\r\n    UPDATE,\r\n    FETCH_NOTIFICATIONS,\r\n    NEW_PROFILE_PIC\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    accountCreated: false,\r\n    isLoggedIn: false,\r\n    authToken: null,\r\n    failureReason: null,\r\n    activeUser: null,\r\n    updates: {},\r\n    notifications: [],\r\n    notificationsPageToken: \"0\"\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                accountCreated: action.payload,\r\n            };\r\n        case LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                failureReason: action.payload\r\n            };\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                failureReason: null,\r\n                authToken: action.payload.authToken,\r\n                activeUser: action.payload.activeUser\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        case UPDATE:\r\n            let updates = state.updates;\r\n            updates.numOfFriendRequests = action.payload.numOfNewFriendRequests;\r\n            return {\r\n                ...state,\r\n                updates: action.payload\r\n            };\r\n        case FETCH_NOTIFICATIONS:\r\n            let notifications = state.notifications.concat(action.payload.notifications);\r\n            return {\r\n                ...state,\r\n                notifications: notifications,\r\n                notificationsPageToken: action.payload.nextPageToken\r\n            };\r\n        case NEW_PROFILE_PIC:\r\n            let activeUser = state.activeUser;\r\n            activeUser.profilePic = action.payload.s3ImgUri;\r\n            return {\r\n                ...state,\r\n                activeUser: Object.assign({}, activeUser)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_POST, LOGOUT, NAVIGATE_TO} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    displayPage: 'login',\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case NAVIGATE_TO:\r\n            return {\r\n                ...state,\r\n                displayPage: action.payload\r\n            };\r\n        case FETCH_POST:\r\n            return {\r\n                ...state,\r\n                displayPage: \"notificationPost\"\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {LOGOUT, OPEN_POPOUT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    anchorElement: null,\r\n    content: {},\r\n    offset: 0,\r\n    trigger: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_POPOUT:\r\n            return {\r\n                ...state,\r\n                anchorElement: action.payload.anchorEl,\r\n                content: action.payload.content,\r\n                offset: action.payload.offset,\r\n                trigger: !state.trigger\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    FETCH_USER_FRIENDS,\r\n    FETCH_FRIEND_REQUESTS,\r\n    RESPOND_TO_REQUEST,\r\n    LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    friendRequests: [],\r\n    requestPageToken: \"0\",\r\n    friendsMenuTrigger: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    let targetUser;\r\n    let targetUserFriends;\r\n    let friendRequests;\r\n    switch (action.type) {\r\n        case FETCH_USER_FRIENDS:\r\n            targetUser = action.payload.targetUser;\r\n            if(state[targetUser] == null) {\r\n                targetUserFriends = action.payload.friends;\r\n            } else {\r\n                let currentFriendsArray = state[targetUser].friends;\r\n                targetUserFriends = currentFriendsArray.concat(action.payload.friends);\r\n            }\r\n            return {\r\n                ...state,\r\n                [targetUser]: {pageToken:action.payload.nextPageToken, friends:targetUserFriends}\r\n            };\r\n        case FETCH_FRIEND_REQUESTS:\r\n            friendRequests = state.friendRequests.concat(action.payload.friendRequests);\r\n            return {\r\n                ...state,\r\n                friendRequests: friendRequests,\r\n                requestPageToken: action.payload.nextPageToken\r\n            };\r\n        case RESPOND_TO_REQUEST:\r\n            friendRequests = state.friendRequests;\r\n            let requestKey = action.payload.requestKey;\r\n            if(action.payload.accepted === true) {\r\n                friendRequests[requestKey].type = 'accepted';\r\n                let activeUser = action.payload.activeUser;\r\n                if(state[activeUser] === undefined) {\r\n                    return {\r\n                        ...state,\r\n                        friendRequests: friendRequests,\r\n                        friendsMenuTrigger: !state.friendsMenuTrigger\r\n                    }\r\n                }\r\n                let currentFriendsArray = state[activeUser].friends;\r\n                if(state[activeUser].pageToken === \"\") {\r\n                    friendRequests[requestKey].since = friendRequests[requestKey].when;\r\n                    currentFriendsArray.push(friendRequests[requestKey]);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    friendRequests: friendRequests,\r\n                    [activeUser]: {pageToken: \"timestamp\", friends: currentFriendsArray},\r\n                    friendsMenuTrigger: !state.friendsMenuTrigger\r\n                }\r\n            } else {\r\n                friendRequests[requestKey].type = 'ignored';\r\n                return {\r\n                    ...state,\r\n                    friendRequests: friendRequests,\r\n                    friendsMenuTrigger: !state.friendsMenuTrigger\r\n                };\r\n            }\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    FETCH_USER_PROFILE,\r\n    USER_SEARCH,\r\n    UPDATE_PROFILE_RELATIONSHIP,\r\n    LOGOUT,\r\n    NEW_BIO,\r\n    NEW_PROFILE_PIC\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    userSearchResults: [],\r\n    updates: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    let currentProfile;\r\n    switch (action.type) {\r\n        case USER_SEARCH:\r\n            return {\r\n                ...state,\r\n                userSearchResults: action.payload\r\n            };\r\n        case FETCH_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                [action.payload.targetUser]: action.payload.profileData\r\n            };\r\n        case UPDATE_PROFILE_RELATIONSHIP:\r\n            currentProfile = state[action.payload.targetUser];\r\n            currentProfile.relationshipStatus = action.payload.newStatus;\r\n            return {\r\n                ...state,\r\n                [action.payload.targetUser]: currentProfile\r\n            };\r\n        case NEW_BIO:\r\n            currentProfile = state[action.payload.targetUser];\r\n            currentProfile.bio = action.payload.newBioContent;\r\n            return {\r\n                ...state,\r\n                [action.payload.targetUser]: currentProfile\r\n            };\r\n        case NEW_PROFILE_PIC:\r\n            currentProfile = state[action.payload.targetUser];\r\n            currentProfile.profilePicUri = action.payload.s3ImgUri;\r\n            return {\r\n                ...state,\r\n                [action.payload.targetUser]: currentProfile\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import {\r\n    POST_IMAGE,\r\n    FETCH_IMAGE,\r\n    LOGOUT,\r\n    NEW_PROFILE_PIC,\r\n    REQUEST_IMAGE_FETCH\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    requestedImages: [],\r\n    requestCounterTrigger: 0\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case POST_IMAGE:\r\n            return {\r\n                ...state,\r\n                [action.payload.s3ImgUri]:action.payload.localImgUrl\r\n            };\r\n        case FETCH_IMAGE:\r\n            return {\r\n                ...state,\r\n                [action.payload.s3ImgUri]: action.payload.localImgUrl\r\n            };\r\n        case REQUEST_IMAGE_FETCH:\r\n            let currentRequests = state.requestedImages;\r\n            currentRequests.push(action.payload);\r\n            return {\r\n                ...state,\r\n                requestedImages: currentRequests,\r\n                requestCounterTrigger: state.requestCounterTrigger+1\r\n            };\r\n        case NEW_PROFILE_PIC:\r\n            if(action.payload.currentProfilePicUri === \"\") {\r\n                return {\r\n                    ...state,\r\n                    [action.payload.s3ImgUri]:action.payload.localImgUrl\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                [action.payload.s3ImgUri]: action.payload.localImgUrl,\r\n                [action.payload.currentProfilePicUri]: action.payload.localImgUrl\r\n            };\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport postReducer from './postReducer';\r\nimport AccountAccessReducer from './accountAccessReducer';\r\nimport NavigationReducer from './navigationReducer'\r\nimport PopoutReducer from './popoutReducer';\r\nimport FriendReducer from './friendReducer';\r\nimport userReducer from './userReducer';\r\nimport imageReducer from './imageReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postReducer,\r\n    accountAccess: AccountAccessReducer,\r\n    navigation: NavigationReducer,\r\n    popout: PopoutReducer,\r\n    friendAccess: FriendReducer,\r\n    users: userReducer,\r\n    images: imageReducer\r\n});","export const FETCH_NEWS_FEED = 'FETCH_NEWS_FEED';\r\nexport const FETCH_USER_POSTS = 'FETCH_USER_POSTS';\r\nexport const NEW_POST = 'NEW_POST';\r\nexport const NEW_COMMENT = 'NEW_COMMENT';\r\nexport const FETCH_POST_COMMENTS = 'FETCH_POST_COMMENTS';\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const UNLIKE_POST = 'UNLIKE_POST';\r\nexport const LIKE_COMMENT = 'LIKE_COMMENT';\r\nexport const UNLIKE_COMMENT = 'UNLIKE_COMMENT';\r\nexport const FETCH_POST = 'FETCH_POST';\r\n\r\nexport const FETCH_IMAGE = 'FETCH_IMAGE';\r\nexport const REQUEST_IMAGE_FETCH = 'REQUEST_IMAGE_FETCH';\r\nexport const POST_IMAGE = 'POST_IMAGE';\r\nexport const NEW_PROFILE_PIC = 'NEW_PROFILE_PIC';\r\n\r\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const UPDATE = 'UPDATE';\r\nexport const NEW_BIO = 'NEW_BIO';\r\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS';\r\n\r\nexport const USER_SEARCH = 'USER_SEARCH';\r\nexport const FETCH_USER_PROFILE = 'FETCH_USER_PROFILE';\r\nexport const UPDATE_PROFILE_RELATIONSHIP = 'UPDATE_PROFILE_RELATIONSHIP';\r\n\r\nexport const NAVIGATE_TO = 'NAVIGATE_TO';\r\n\r\nexport const OPEN_POPOUT = 'OPEN_POPOUT';\r\n\r\nexport const FETCH_USER_FRIENDS = 'FETCH_USER_FRIENDS';\r\nexport const FETCH_FRIEND_REQUESTS = 'FETCH_FRIEND_REQUESTS';\r\nexport const RESPOND_TO_REQUEST = 'RESPOND_TO_REQUEST';","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(...middleware),\r\n    )\r\n);\r\n\r\nexport default store;","import {createMuiTheme} from '@material-ui/core/styles';\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: deepPurple,\r\n        secondary: yellow,\r\n        background: {\r\n            default: \"#eeeeee\",\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {createAccount} from \"../../actions/accountAccessActions\";\r\nimport compose from \"recompose/compose\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/es/Button\";\r\nimport TextField from \"@material-ui/core/es/TextField\";\r\nimport Paper from \"@material-ui/core/es/Paper\";\r\nimport Grid from \"@material-ui/core/es/Grid\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        padding: 64\r\n    },\r\n    title: {\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 32,\r\n        color: theme.palette.primary.main\r\n    },\r\n    textFieldContainer: {\r\n        paddingTop: 8\r\n    },\r\n    textField: {\r\n        fontFamily: 'PTSansCaption',\r\n        fontSize: 16,\r\n    },\r\n    errorText: {\r\n        fontFamily: 'PTSansCaption',\r\n        fontSize: 16,\r\n        color: theme.palette.error.main\r\n    },\r\n    submitButton: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.background.default,\r\n        marginTop: 12\r\n    }\r\n});\r\n\r\nclass AccountCreator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            password2: '',\r\n            passLengthError: false,\r\n            passMatchError: false,\r\n            validEmailError: false,\r\n            existingEmailError: false,\r\n            firstNameLengthError: false,\r\n            lastNameLengthError: false\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateEmailSyntax = this.validateEmailSyntax.bind(this);\r\n        this.checkExistingAccount = this.checkExistingAccount.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.checkExistingAccount(this.state.email).then(response => {\r\n            this.setState({\r\n                passLengthError: this.state.password.length < 8,\r\n                passMatchError: this.state.password !== this.state.password2,\r\n                validEmailError: !this.validateEmailSyntax(this.state.email),\r\n                existingEmailError: response === \"true\",\r\n                firstNameLengthError: this.state.firstName.length < 1,\r\n                lastNameLengthError: this.state.lastName.length < 1\r\n            }, () => {\r\n                if(!(this.state.validEmailError || this.state.passLengthError\r\n                    || this.state.passMatchError || this.state.existingEmailError)) {\r\n                    let userData = {\r\n                            \"firstName\": this.state.firstName,\r\n                            \"lastName\": this.state.lastName,\r\n                            \"password\": this.state.password,\r\n                            \"email\": this.state.email\r\n                        };\r\n                    this.props.createAccount(userData);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateEmailSyntax(email) {\r\n        let re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase()) && email.length < 200;\r\n    }\r\n\r\n    checkExistingAccount(email) {\r\n        //check if email exists in database, returns promise with result\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'text/plain');\r\n        return fetch('/checkexistingaccount', {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: email\r\n        }).then(response => {\r\n            return response.text()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const state = this.state;\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        return (\r\n            <Grid container alignContent=\"center\" direction=\"column\">\r\n                <Paper className={classes.container}>\r\n                    <div className={classes.title}>Create Account</div>\r\n                    <div>\r\n                        <div>\r\n                            <EmailInput existingEmailError={state.existingEmailError}\r\n                                        validEmailError={state.validEmailError} onChange={this.onChange}\r\n                                        email={state.email} classes={classes}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.textFieldContainer}>\r\n                            <NameInput label=\"First Name\" nameLengthError={state.firstNameLengthError}\r\n                                       onChange={this.onChange} nameType=\"firstName\" nameValue={state.firstName}\r\n                                       classes={classes}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.textFieldContainer}>\r\n                            <NameInput label=\"Last Name\" nameLengthError={state.lastNameLengthError}\r\n                                       onChange={this.onChange} nameType=\"lastName\" nameValue={state.lastName}\r\n                                       classes={classes}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.textFieldContainer}>\r\n                            <PasswordInput passLengthError={state.passLengthError} onChange={this.onChange}\r\n                                           password={state.password} classes={classes}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.textFieldContainer}>\r\n                            <PasswordConfirmInput passMatchError={state.passMatchError} onChange={this.onChange}\r\n                                                  password={state.password2} classes={classes}\r\n                            />\r\n                        </div>\r\n                        <Button className={classes.submitButton} onClick={this.onSubmit}>Submit</Button>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nclass EmailInput extends Component {\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        if(props.validEmailError) {\r\n            return (\r\n                <div>\r\n                  <TextField name=\"email\" label=\"Email\" onChange={props.onChange} value={props.email} error={true}\r\n                               required={true} variant=\"outlined\" helperText=\"This must be a valid email\"\r\n                               InputProps={{\r\n                                   classes: {\r\n                                       input: classes.textField\r\n                                   }\r\n                               }}\r\n                    />\r\n                </div>\r\n            );\r\n        }else if(props.existingEmailError) {\r\n            return (\r\n                <div>\r\n                    <TextField name=\"email\" label=\"Email\" onChange={props.onChange} value={props.email} error={true}\r\n                               required={true} variant=\"outlined\"\r\n                               helperText=\"This email is already registered. Click the LOGIN button above to login.\"\r\n                               InputProps={{\r\n                                   classes: {\r\n                                       input: classes.textField\r\n                                   }\r\n                               }}\r\n                    />\r\n                </div>\r\n            );\r\n        } else return (\r\n            <div>\r\n                <TextField name=\"email\" label=\"Email\" onChange={props.onChange} value={props.email} error={false}\r\n                           required={true} variant=\"outlined\" helperText=\"This must be a valid email\"\r\n                           InputProps={{\r\n                               classes: {\r\n                                   input: classes.textField\r\n                               }\r\n                           }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass NameInput extends Component {\r\n                render() {\r\n                    const props = this.props;\r\n                    const classes = props.classes;\r\n\r\n                    if(props.nameLengthError) {\r\n                        return (\r\n                            <div>\r\n                                <TextField name={props.nameType} label={props.label} onChange={props.onChange}\r\n                                           value={props.nameValue} error={true} required={true} variant=\"outlined\"\r\n                                           helperText=\"Cannot be empty\"\r\n                                           InputProps={{\r\n                                               classes: {\r\n                                                   input: classes.textField\r\n                                               }\r\n                                           }}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <TextField name={props.nameType} label={props.label} onChange={props.onChange}\r\n                                       value={props.nameValue} error={false} required={true} variant=\"outlined\"\r\n                                       InputProps={{\r\n                                           classes: {\r\n                                               input: classes.textField\r\n                                           }\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n}\r\n\r\nclass PasswordInput extends Component {\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        if(props.passLengthError) {\r\n            return (\r\n                <div>\r\n                    <TextField name=\"password\" label=\"Password\" onChange={props.onChange} type=\"password\"\r\n                               value={props.password} error={true} required={true} variant=\"outlined\"\r\n                               helperText=\"Must be at least 8 characters\"\r\n                               InputProps={{\r\n                                   classes: {\r\n                                       input: classes.textField\r\n                                   }\r\n                               }}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <TextField name=\"password\" label=\"Password\" onChange={props.onChange} type=\"password\"\r\n                           value={props.password} error={false} required={true} variant=\"outlined\"\r\n                           helperText=\"Must be at least 8 characters\"\r\n                           InputProps={{\r\n                               classes: {\r\n                                   input: classes.textField\r\n                               }\r\n                           }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass PasswordConfirmInput extends Component {\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        if(props.passMatchError) {\r\n            return (\r\n                <div>\r\n                    <TextField name=\"password2\" label=\"Confirm Password\" onChange={props.onChange} type=\"password\"\r\n                               value={props.password} error={true} required={true} variant=\"outlined\"\r\n                               helperText=\"The passwords must match\"\r\n                               InputProps={{\r\n                                   classes: {\r\n                                       input: classes.textField\r\n                                   }\r\n                               }}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <TextField name=\"password2\" label=\"Confirm Password\" onChange={props.onChange} type=\"password\"\r\n                           value={props.password} error={false} required={true} variant=\"outlined\"\r\n                           InputProps={{\r\n                               classes: {\r\n                                   input: classes.textField\r\n                               }\r\n                           }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAccountCreator.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    createAccount: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(null, {createAccount}))(AccountCreator);\r\n\r\n","import {UPDATE, CREATE_ACCOUNT, LOGIN, LOGIN_FAILED, LOGOUT, FETCH_NOTIFICATIONS} from \"./types\";\r\nimport JWT from \"jsonwebtoken\";\r\n\r\nexport const createAccount = (data) => dispatch => {\r\n    fetch(\"/users\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            password: data.password,\r\n            email: data.email,\r\n        })\r\n    }).then(response => {\r\n        dispatch({\r\n            type: CREATE_ACCOUNT,\r\n            payload: response.status === 200\r\n        });\r\n    });\r\n};\r\n\r\nexport const login = (data) => dispatch => {\r\n    fetch(\"/users/login\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            email: data.email,\r\n            password: data.password\r\n        })\r\n    }).then(response => {\r\n        response.text().then(responseMessage => {\r\n            switch (response.status) {\r\n                case 200:\r\n                    let rawToken = response.headers.get(\"Authorization\");\r\n                    let justJWT = rawToken.replace(\"Bearer \", \"\");\r\n                    let decoded = JWT.decode(justJWT);\r\n                    let profilePic = response.headers.get(\"profilePic\");\r\n                    dispatch({\r\n                        type: LOGIN,\r\n                        payload: {\r\n                            authToken: rawToken,\r\n                            activeUser: {\r\n                                uuid: decoded.UUID,\r\n                                firstName: decoded.FIRST_NAME,\r\n                                lastName: decoded.LAST_NAME,\r\n                                profilePic: profilePic\r\n                            }\r\n                        }\r\n                    });\r\n                    break;\r\n                case 404:\r\n                    dispatch({\r\n                       type: LOGIN_FAILED,\r\n                       payload: responseMessage\r\n                    });\r\n                    break;\r\n                case 401:\r\n                    dispatch({\r\n                        type: LOGIN_FAILED,\r\n                        payload: responseMessage\r\n                    });\r\n                    break;\r\n                default:\r\n                    dispatch({\r\n                        type: LOGIN_FAILED,\r\n                        payload: responseMessage\r\n                    });\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n\r\nexport const updateActiveUser = (authToken, activeUser) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch(\"/users/\"+activeUser+\"/update\", {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => res.json()\r\n        .then(updates => {\r\n            dispatch({\r\n                type: UPDATE,\r\n                payload: updates\r\n            })\r\n        })\r\n    )\r\n};\r\n\r\nexport const fetchNotifications = (authToken, activeUser, pageToken) => dispatch => {\r\n    if(pageToken === \"\") {\r\n        return;\r\n    }\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch('/users/'+activeUser+'/notifications', {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json().then(notifications => {\r\n            let nextPageToken = notifications.pop().nextPageToken;\r\n            dispatch({\r\n                type: FETCH_NOTIFICATIONS,\r\n                payload: {\r\n                    nextPageToken: nextPageToken,\r\n                    notifications: notifications\r\n                }\r\n            })\r\n        })\r\n    })\r\n\r\n};","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {login} from \"../../actions/accountAccessActions\";\r\nimport TextField from \"@material-ui/core/es/TextField\";\r\nimport Button from \"@material-ui/core/es/Button\";\r\nimport compose from \"recompose/compose\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/es/Paper\";\r\nimport Grid from \"@material-ui/core/es/Grid\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        padding: 64\r\n    },\r\n    title: {\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 32,\r\n        color: theme.palette.primary.main\r\n    },\r\n    subTitle: {\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 24,\r\n        color: theme.palette.primary[\"300\"]\r\n    },\r\n    textField: {\r\n        fontFamily: 'PTSansCaption',\r\n        fontSize: 16,\r\n    },\r\n    errorText: {\r\n        fontFamily: 'PTSansCaption',\r\n        fontSize: 16,\r\n        color: theme.palette.error.main\r\n    },\r\n    loginButton: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.background.default,\r\n        marginTop: 8\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.accountAccess.isLoggedIn,\r\n    failureReason: state.accountAccess.failureReason,\r\n    authenticationHeaders: state.accountAccess.authenticationHeaders,\r\n    accountCreated: state.accountAccess.accountCreated\r\n});\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            nonExistingEmailError: false,\r\n            invalidPasswordError: false,\r\n            updateTrigger: false\r\n        };\r\n\r\n        this.input = null;\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.input = document.getElementById(\"passwordInput\");\r\n        this.input.addEventListener(\"keyup\", (e)=>{\r\n            if(e.code === \"Enter\") {\r\n                this.onSubmit();\r\n            }\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.input.removeEventListener(\"keyup\", (e)=>{\r\n            if(e.code === \"Enter\") {\r\n                this.onSubmit();\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if((prevProps.failureReason !== this.props.failureReason) || (prevProps.isLoggedIn !== this.props.isLoggedIn)) {\r\n            if(!this.props.loginSuccessful) {\r\n                if(this.props.failureReason === \"Email not found\") {\r\n                    this.setState({\r\n                        nonExistingEmailError: true,\r\n                        invalidPasswordError: false\r\n                    });\r\n                } else if(this.props.failureReason === \"Invalid Password\") {\r\n                    this.setState({\r\n                        nonExistingEmailError: false,\r\n                        invalidPasswordError: true\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        let userData = {\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n        };\r\n        this.props.login(userData);\r\n    };\r\n\r\n    render() {\r\n        const state = this.state;\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <Grid container alignContent=\"center\" direction=\"column\">\r\n                {\r\n                    this.props.accountCreated &&\r\n                        <div>\r\n                            <div className={classes.title}>\r\n                                Account Created!\r\n                            </div>\r\n                            <div className={classes.subTitle}>\r\n                                Try logging in\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Paper className={classes.container}>\r\n                    <div className={classes.title}>Login Page</div>\r\n                    <div>\r\n                        <MessageBox classes={classes} invalidPasswordError={state.invalidPasswordError}\r\n                                    nonExistingEmailError={state.nonExistingEmailError}\r\n                        />\r\n                        <div>\r\n                            <TextField name=\"email\" label=\"Email\" value={state.email} onChange={this.onChange}\r\n                                       className={classes.textField} margin=\"dense\" variant=\"outlined\"\r\n                                       error={state.nonExistingEmailError} InputLabelProps={{ shrink: true }}\r\n                                       autoFocus={true}\r\n                                       InputProps={{\r\n                                           classes: {\r\n                                               input: classes.textField\r\n                                           }\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField name=\"password\" label=\"Password\" value={state.password} onChange={this.onChange}\r\n                                       margin=\"dense\" variant=\"outlined\" required={true} type=\"password\"\r\n                                       error={state.invalidPasswordError} id={\"passwordInput\"} InputLabelProps={{ shrink: true }}\r\n                                       InputProps={{\r\n                                           classes: {\r\n                                               input: classes.textField\r\n                                           }\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                        <Button className={classes.loginButton} onClick={this.onSubmit}>Login</Button>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nclass MessageBox extends Component {\r\n    render() {\r\n        if(this.props.invalidPasswordError) {\r\n            return (\r\n                <span className={this.props.classes.errorText}>The password you entered was incorrect</span>\r\n            );\r\n        } else if(this.props.nonExistingEmailError){\r\n            return (\r\n                <span className={this.props.classes.errorText}>An account with this email doesn't exist</span>\r\n            );\r\n        }\r\n        return (\r\n            <span className={this.props.classes.textField}>Enter login information here</span>\r\n        );\r\n    }\r\n}\r\n\r\nLoginComponent.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    loginSuccessful: PropTypes.bool,\r\n    failureReason: PropTypes.string,\r\n    authenticationHeaders: PropTypes.object,\r\n    accountCreated: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {login}))(LoginComponent);\r\n\r\n\r\n","import {\r\n    FETCH_USER_FRIENDS,\r\n    FETCH_FRIEND_REQUESTS,\r\n    RESPOND_TO_REQUEST,\r\n    UPDATE_PROFILE_RELATIONSHIP\r\n} from \"./types\";\r\n\r\nexport const fetchFriendRequests = (authToken, activeUser, pageToken) => dispatch => {\r\n    if(pageToken === \"\") {\r\n        return;\r\n    }\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch(\"/users/\"+activeUser+\"/friend-requests\", {\r\n        method: 'GET',\r\n        headers: headers\r\n    })\r\n        .then(res => res.json()\r\n            .then(friendRequests => {\r\n                let nextPageToken = friendRequests.pop().nextPageToken;\r\n                dispatch({\r\n                    type: FETCH_FRIEND_REQUESTS,\r\n                    payload: {nextPageToken: nextPageToken, friendRequests: friendRequests}\r\n                })\r\n            }))\r\n\r\n};\r\n\r\nexport const fetchUserFriends = (authToken, targetUser, pageToken) => dispatch => {\r\n    if(pageToken === \"\") {\r\n        return;\r\n    }\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch(\"/users/\"+targetUser+\"/friends\", {\r\n        method: 'GET',\r\n        headers: headers\r\n    })\r\n        .then(res => res.json()\r\n            .then(friends => {\r\n                let nextPageToken = friends.pop().nextPageToken;\r\n                dispatch({\r\n                    type: FETCH_USER_FRIENDS,\r\n                    payload: {\r\n                        targetUser: targetUser,\r\n                        friends: friends,\r\n                        nextPageToken: nextPageToken\r\n                    }\r\n                })\r\n            })\r\n        )\r\n};\r\n\r\nexport const unfriend = (authToken, targetUser) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch(\"/users/\"+targetUser+\"/friends\", {\r\n        method: 'DELETE',\r\n        headers: headers\r\n    });\r\n    dispatch({\r\n        type: UPDATE_PROFILE_RELATIONSHIP,\r\n        payload: {targetUser: targetUser, newStatus: 'newUser'}\r\n    })\r\n};\r\n\r\nexport const sendFriendRequest = (authToken, targetUser) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch(\"/users/\"+targetUser+\"/friend-requests\", {\r\n        method: 'POST',\r\n        headers: headers\r\n    });\r\n    dispatch({\r\n        type: UPDATE_PROFILE_RELATIONSHIP,\r\n        payload: {targetUser: targetUser, newStatus: 'youRequestedFriendShip'}\r\n    })\r\n};\r\n\r\nexport const respondToRequest = (authToken, activeUser, sendingUser, response, requestKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('Content-Type', 'text/plain');\r\n    fetch(\"/users/\"+activeUser+\"/friend-requests/\"+sendingUser, {\r\n        method: 'PUT',\r\n        headers: headers,\r\n        body: response\r\n    });\r\n\r\n    if(response === 'accepted') {\r\n        if(requestKey === undefined) {\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RELATIONSHIP,\r\n                payload: {targetUser: sendingUser, newStatus: 'friends'}\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: RESPOND_TO_REQUEST,\r\n                payload: {requestKey: requestKey, accepted: true, activeUser: activeUser}\r\n            })\r\n        }\r\n    } else if(response === 'ignored') {\r\n        if(requestKey === undefined) {\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RELATIONSHIP,\r\n                payload: {targetUser: sendingUser, newStatus: 'ignored'}\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: RESPOND_TO_REQUEST,\r\n                payload: {requestKey: requestKey, accepted: false}\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteFriendRequest = (authToken, activeUser, targetUser) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch(\"/users/\"+targetUser+\"/friend-requests/\"+activeUser, {\r\n        method: 'DELETE',\r\n        headers: headers,\r\n    });\r\n\r\n    dispatch({\r\n        type: UPDATE_PROFILE_RELATIONSHIP,\r\n        payload: {targetUser: targetUser, newStatus: 'newUser'}\r\n    })\r\n};\r\n\r\n\r\n\r\n\r\n","import {NAVIGATE_TO} from \"./types\";\r\n\r\nexport const navigateTo = (destination) => dispatch =>{\r\n    dispatch({\r\n        type: NAVIGATE_TO,\r\n        payload: destination\r\n    })\r\n};\r\n\r\n","import {OPEN_POPOUT} from \"./types\";\r\n\r\nexport const openPopout = (anchorEl, content, offset) => dispatch => {\r\n    let getOffset = offset;\r\n\r\n    if(offset) {\r\n        getOffset = offset\r\n    } else {\r\n        getOffset = 0;\r\n    }\r\n\r\n    dispatch({\r\n        type: OPEN_POPOUT,\r\n        payload: {\r\n            anchorEl: anchorEl,\r\n            content: content,\r\n            offset: getOffset\r\n        }\r\n    });\r\n};","import {FETCH_IMAGE, POST_IMAGE, REQUEST_IMAGE_FETCH} from \"./types\";\r\n\r\nexport const postImage = (file, caption, authToken) => dispatch => {\r\n    let data = new FormData();\r\n    data.append('image', file);\r\n    data.append('caption', caption);\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n\r\n    fetch('/images', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: headers\r\n    }).then(response => {\r\n        response.text().then(s3ImgUri => {\r\n            dispatch({\r\n                type: POST_IMAGE,\r\n                payload: {\r\n                    s3ImgUri: s3ImgUri,\r\n                    localImgUrl: URL.createObjectURL(file)\r\n                }\r\n            })\r\n        })\r\n    })\r\n};\r\n\r\nexport const fetchImage = (s3ImageUri, authToken, type) => dispatch => {\r\n    if(s3ImageUri === undefined) {\r\n        return;\r\n    }\r\n\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('type', type);\r\n\r\n    fetch('/images/'+s3ImageUri, {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(response => {\r\n        response.blob().then(blob => {\r\n            let imgUrl = window.URL.createObjectURL(blob);\r\n            dispatch({\r\n                type: FETCH_IMAGE,\r\n                payload: {\r\n                    s3ImgUri: s3ImageUri,\r\n                    localImgUrl: imgUrl\r\n                }\r\n            })\r\n        });\r\n    })\r\n};\r\n\r\nexport const requestImageFetch = (s3ImageUri, type) => dispatch => {\r\n    dispatch({\r\n        type: REQUEST_IMAGE_FETCH,\r\n        payload: {\r\n            uri: s3ImageUri,\r\n            type: type\r\n        }\r\n    })\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { requestImageFetch } from \"../../actions/imageActions\";\r\nimport { navigateTo } from \"../../actions/navigationActions\";\r\nimport IconButton from \"@material-ui/core/es/IconButton/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    avatarButton: {\r\n        padding: 0\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    imageRepo: state.images,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass ProfilePic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            localImgUrl: \"\"\r\n        };\r\n\r\n        this.displayAvatar = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        if(props.s3ImageUri !== undefined) {\r\n            if(props.s3ImageUri !== \"\") {\r\n                if(props.imageRepo[props.s3ImageUri] === undefined) {\r\n                    props.requestImageFetch(props.s3ImageUri, \"post\");\r\n                } else {\r\n                    this.setState({\r\n                        localImgUrl: props.imageRepo[props.s3ImageUri]\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const props = this.props;\r\n            if(props.imageRepo[props.s3ImageUri] !== undefined) {\r\n                if(props.imageRepo[props.s3ImageUri] !== prevProps.imageRepo[prevProps.s3ImageUri]) {\r\n                    this.setState({\r\n                        localImgUrl: props.imageRepo[props.s3ImageUri]\r\n                    })\r\n                }\r\n            } else {\r\n                if(props.s3ImageUri === \"\" && props.s3ImageUri !== prevProps.s3ImageUri) {\r\n                    this.setState({\r\n                        localImgUrl: \"\"\r\n                    })\r\n                }\r\n            }\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const state = this.state;\r\n        const props = this.props;\r\n\r\n        let buttonStyle = classes.avatar;\r\n        if(props.styleOverride !== undefined) {\r\n            buttonStyle = props.styleOverride\r\n        }\r\n\r\n        if(state.localImgUrl === \"\") {\r\n            if(props.noPicOverrideMessage !== undefined) {\r\n                this.displayAvatar = (\r\n                    <IconButton className={classes.avatarButton}>\r\n                        <Avatar className={buttonStyle}>\r\n                            {props.noPicOverrideMessage}\r\n                        </Avatar>\r\n                    </IconButton>\r\n                );\r\n            } else {\r\n                this.displayAvatar = (\r\n                    <IconButton className={classes.avatarButton}>\r\n                        <Avatar className={buttonStyle}>\r\n                            {props.userFirstName.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                    </IconButton>\r\n                );\r\n            }\r\n        } else {\r\n            this.displayAvatar = (\r\n                <IconButton className={classes.avatarButton}>\r\n                    <Avatar src={state.localImgUrl} className={buttonStyle}/>\r\n                </IconButton>\r\n            );\r\n        }\r\n        if(props.noButton !== undefined) {\r\n            if(props.noButton) {\r\n                if(state.localImgUrl === \"\") {\r\n                    this.displayAvatar = (\r\n                        <Avatar className={buttonStyle}>\r\n                            {props.userFirstName.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                    );\r\n                } else {\r\n                    this.displayAvatar = (\r\n                        <Avatar src={state.localImgUrl} className={buttonStyle}/>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if(props.clickable !== undefined) {\r\n            if(!props.clickable) {\r\n                return (\r\n                    <div>\r\n                        {this.displayAvatar}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        if(props.userUuid === undefined) {\r\n            return (\r\n                <div>\r\n                    {this.displayAvatar}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div onClick={()=>props.navigateTo(props.userUuid)}>\r\n                {this.displayAvatar}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfilePic.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    requestImageFetch: PropTypes.func.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    userUuid: PropTypes.string,\r\n    userFirstName: PropTypes.string.isRequired,\r\n    s3ImageUri: PropTypes.string.isRequired,\r\n    styleOverride: PropTypes.any,\r\n    clickable: PropTypes.bool,\r\n    authToken: PropTypes.string.isRequired,\r\n    noButton: PropTypes.bool,\r\n    noPicOverrideMessage: PropTypes.string\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {requestImageFetch, navigateTo}))(ProfilePic);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {createComment} from \"../../actions/postActions\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from \"@material-ui/core/es/InputBase\";\r\nimport ButtonBase from \"@material-ui/core/es/ButtonBase/ButtonBase\";\r\nimport SendIcon from \"@material-ui/icons/SendRounded\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        color: yellow[500],\r\n        backgroundColor: deepPurple[500],\r\n        maxWidth: 32,\r\n        maxHeight: 32\r\n    },\r\n    textField: {\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 12,\r\n        padding: 8\r\n    },\r\n    textInnerContainer: {\r\n        borderRadius: 25,\r\n        backgroundColor: deepPurple[300],\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n        paddingTop: 1,\r\n        paddingBottom: 1\r\n    },\r\n    textContainer: {\r\n        paddingLeft: 4,\r\n        paddingRight: 4\r\n    },\r\n    sendIcon: {\r\n        color: deepPurple[500],\r\n        minHeight: 26,\r\n        minWidth: 26,\r\n        marginLeft: 4\r\n    },\r\n    sendButton: {\r\n        height: 32,\r\n        width: 48,\r\n        padding: 0,\r\n        borderRadius: 25,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    activeUser: state.accountAccess.activeUser,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.text.length < 1) {\r\n            return;\r\n        }\r\n        this.props.createComment(this.state.text, this.props.authToken, this.props.postOwnerUuid, this.props.postUuid, this.props.postKey);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        const renderAvatar = (\r\n            <ProfilePic s3ImageUri={props.activeUser.profilePic} userUuid={props.activeUser.uuid}\r\n                        userFirstName={props.activeUser.firstName} styleOverride={classes.avatar}\r\n            />\r\n        );\r\n\r\n        const renderTextField = (\r\n            <div className={classes.textInnerContainer} ref={this.setTextFieldRef}>\r\n                <InputBase className={classes.textField} placeholder=\"Thoughts?\" multiline={true} fullWidth={true}\r\n                           autoComplete=\"off\" rowsMax={4} name=\"text\" onChange={this.onChange} value={this.state.text}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\" justify=\"flex-start\">\r\n                    <Grid item>\r\n                        {renderAvatar}\r\n                    </Grid>\r\n                    <Grid item xs className={classes.textContainer}>\r\n                        {renderTextField}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ButtonBase onClick={this.onSubmit} className={classes.sendButton}>\r\n                            <SendIcon className={classes.sendIcon}/>\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nCommentForm.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    createComment: PropTypes.func.isRequired,\r\n    activeUser: PropTypes.object.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    postUuid: PropTypes.string.isRequired,\r\n    postOwnerUuid: PropTypes.string.isRequired,\r\n    postKey: PropTypes.number.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {createComment}))(CommentForm);","import {\r\n    FETCH_NEWS_FEED,\r\n    FETCH_POST_COMMENTS,\r\n    FETCH_USER_POSTS,\r\n    NEW_COMMENT,\r\n    NEW_POST,\r\n    LIKE_POST,\r\n    UNLIKE_POST, FETCH_POST, LIKE_COMMENT, UNLIKE_COMMENT\r\n} from \"./types\";\r\n\r\nexport const fetchNewsFeed = (activeUser, authToken, pageToken) => dispatch => {\r\n    if(pageToken === \"\" || pageToken === undefined) {\r\n        return;\r\n    }\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch('/users/'+activeUser+'/newsfeed', {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json().then(posts => {\r\n            let nextPageToken = posts.pop().nextPageToken;\r\n            dispatch({\r\n                type: FETCH_NEWS_FEED,\r\n                payload: {\r\n                    posts: posts,\r\n                    nextPageToken: nextPageToken\r\n                }\r\n            })\r\n        })\r\n    })\r\n};\r\n\r\nexport const fetchUserPosts = (targetUser, authToken, pageToken) => dispatch => {\r\n    if(pageToken === \"\" || pageToken === undefined) {\r\n        return;\r\n    }\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch('/users/'+targetUser+'/posts', {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json()\r\n            .then(posts => {\r\n                let nextPageToken = posts.pop().nextPageToken;\r\n                dispatch({\r\n                    type: FETCH_USER_POSTS,\r\n                    payload: {\r\n                        targetUser: targetUser,\r\n                        posts: posts,\r\n                        nextPageToken: nextPageToken\r\n                    }\r\n                })\r\n            });\r\n    });\r\n};\r\n\r\nexport const createPost = (postData, image, authToken, targetUser) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    let data = new FormData();\r\n    data.append('text', postData.text);\r\n    data.append('image', image);\r\n    if(postData.showEveryone) {\r\n        data.append('privacyKey', 2);\r\n    } else if(postData.showFriends) {\r\n        data.append('privacyKey', 1);\r\n    } else {\r\n        data.append('privacyKey', 0);\r\n    }\r\n    fetch('/users/'+targetUser+'/posts', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: headers\r\n    }).then( res => {\r\n        res.json()\r\n            .then(newPost =>{\r\n                dispatch({\r\n                    type: NEW_POST,\r\n                    payload: {\r\n                        newPost: newPost,\r\n                        targetUser: targetUser\r\n                    }\r\n                })\r\n            });\r\n    });\r\n};\r\n\r\nexport const fetchPostComments = (authToken, targetUser, targetPost, postKey, pageToken) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('page_token', pageToken);\r\n    headers.append('page_size', 10);\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/comments', {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json()\r\n            .then(comments => {\r\n                let nextPageToken = comments.pop().nextPageToken;\r\n                dispatch({\r\n                    type: FETCH_POST_COMMENTS,\r\n                    payload: {\r\n                        targetUser: targetUser,\r\n                        postKey: postKey,\r\n                        comments: comments,\r\n                        nextPageToken: nextPageToken\r\n                    }\r\n                })\r\n            });\r\n    });\r\n};\r\n\r\nexport const createComment = (commentText, authToken, targetUser, targetPost, postKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('Content-Type', 'text/plain');\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/comments', {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: commentText\r\n    }).then(res => {\r\n        res.json()\r\n            .then(newComment => {\r\n                dispatch({\r\n                    type: NEW_COMMENT,\r\n                    payload: {\r\n                        targetUser: targetUser,\r\n                        postKey: postKey,\r\n                        newComment: newComment\r\n                    }\r\n                })\r\n            });\r\n    });\r\n};\r\n\r\nexport const likePost = (targetUser, targetPost, authToken, postKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/likes', {\r\n        method: 'POST',\r\n        headers: headers\r\n    }).then(res => {\r\n        if(res.status === 200) {\r\n            dispatch({\r\n                type: LIKE_POST,\r\n                payload: {\r\n                    targetUser: targetUser,\r\n                    postKey: postKey\r\n                }\r\n            })\r\n        }\r\n    })\r\n};\r\n\r\nexport const unlikePost = (targetUser, targetPost, authToken, postKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/likes', {\r\n        method: 'DELETE',\r\n        headers: headers\r\n    }).then(res => {\r\n        if(res.status === 200) {\r\n            dispatch({\r\n                type: UNLIKE_POST,\r\n                payload: {\r\n                    targetUser: targetUser,\r\n                    postKey: postKey\r\n                }\r\n            })\r\n        }\r\n    })\r\n};\r\n\r\nexport const likeComment = (targetUser, targetPost, targetComment, authToken, postKey, commentKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/comments/'+targetComment+'/likes', {\r\n        method: 'POST',\r\n        headers: headers\r\n    }).then(response => {\r\n        if(response.status === 200) {\r\n            dispatch({\r\n                type: LIKE_COMMENT,\r\n                payload: {\r\n                    targetUser: targetUser,\r\n                    postKey: postKey,\r\n                    commentKey: commentKey\r\n                }\r\n            })\r\n        }\r\n    })\r\n};\r\n\r\nexport const unlikeComment = (targetUser, targetPost, targetComment, authToken, postKey, commentKey) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch('/users/'+targetUser+'/posts/'+targetPost+'/comments/'+targetComment+'/likes', {\r\n        method: 'DELETE',\r\n        headers: headers\r\n    }).then(response => {\r\n        if(response.status === 200) {\r\n            dispatch({\r\n                type: UNLIKE_COMMENT,\r\n                payload: {\r\n                    targetUser: targetUser,\r\n                    postKey: postKey,\r\n                    commentKey: commentKey\r\n                }\r\n            })\r\n        }\r\n    })\r\n};\r\n\r\nexport const fetchPost = (targetPost, postOwner, authToken) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    fetch('/users/'+postOwner+'/posts/'+targetPost, {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json().then(post => {\r\n            dispatch({\r\n                type: FETCH_POST,\r\n                payload: post\r\n            })\r\n        })\r\n    })\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\nimport {likeComment, unlikeComment} from \"../../actions/postActions\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\nimport Badge from \"@material-ui/core/es/Badge/Badge\";\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.primary.main,\r\n        maxWidth: 32,\r\n        maxHeight: 32\r\n    },\r\n    commentTitle: {\r\n        cursor: \"pointer\",\r\n        paddingRight: 4,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 14,\r\n        color: theme.palette.primary.main\r\n    },\r\n    text: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 14\r\n    },\r\n    textInnerContainer: {\r\n        borderRadius: 25,\r\n        backgroundColor: theme.palette.primary[\"300\"],\r\n        paddingLeft: 12,\r\n        paddingRight: 12,\r\n        paddingTop: 4,\r\n        paddingBottom: 6,\r\n        minHeight: 32\r\n    },\r\n    textContainer: {\r\n        paddingLeft: 4,\r\n        paddingRight: 4\r\n    },\r\n    likeButton: {\r\n        padding: 4,\r\n        background: \"transparent\"\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass CommentObject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let liked = false;\r\n        if(!(props.comment.liked === undefined)) {\r\n            if(!(props.comment.liked == null)) {\r\n                liked = props.comment.liked;\r\n            }\r\n        }\r\n\r\n        let howLongAgo = Date.now() - props.comment.when;\r\n        let whenPosted;\r\n        if(howLongAgo < 180000) {\r\n            whenPosted = 'Just now';\r\n        } else if(howLongAgo < 3.6*10**6) {\r\n            let mins = Math.floor(howLongAgo/60000);\r\n            whenPosted = mins.toString()+' min ago';\r\n        } else if(howLongAgo < 8.64*10**7) {\r\n            let hrs = Math.floor(howLongAgo/(3.6*10**6));\r\n            whenPosted = hrs.toString()+' hrs ago';\r\n        } else if(howLongAgo < 1.728*10**8) {\r\n            whenPosted = 'Yesterday';\r\n        } else {\r\n            whenPosted = new Date(props.comment.when).toString();\r\n        }\r\n\r\n        this.state = {\r\n            activeUserLiked: liked,\r\n            whenPosted: whenPosted,\r\n            numOfLikes: props.comment.numOfLikes\r\n        };\r\n\r\n        this.updateCommentState = this.updateCommentState.bind(this);\r\n        this.toggleLike = this.toggleLike.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.comment !== prevProps.comment) {\r\n            this.updateCommentState();\r\n        }\r\n    }\r\n\r\n    updateCommentState = () => {\r\n        const props = this.props;\r\n\r\n        let liked = false;\r\n        if(!(props.comment.liked === undefined)) {\r\n            if(!(props.comment.liked == null)) {\r\n                liked = props.comment.liked;\r\n            }\r\n        }\r\n\r\n        let howLongAgo = Date.now() - props.comment.when;\r\n        let whenPosted;\r\n        if(howLongAgo < 180000) {\r\n            whenPosted = 'Just now';\r\n        } else if(howLongAgo < 3.6*10**6) {\r\n            let mins = Math.floor(howLongAgo/60000);\r\n            whenPosted = mins.toString()+' min ago';\r\n        } else if(howLongAgo < 8.64*10**7) {\r\n            let hrs = Math.floor(howLongAgo/(3.6*10**6));\r\n            whenPosted = hrs.toString()+' hrs ago';\r\n        } else if(howLongAgo < 1.728*10**8) {\r\n            whenPosted = 'Yesterday';\r\n        } else {\r\n            whenPosted = new Date(props.comment.when).toString();\r\n        }\r\n\r\n        this.setState({\r\n            activeUserLiked: liked,\r\n            whenPosted: whenPosted,\r\n            numOfLikes: props.comment.numOfLikes\r\n        });\r\n    };\r\n\r\n    toggleLike() {\r\n        const state = this.state;\r\n        const props = this.props;\r\n        if(state.activeUserLiked) {\r\n            this.setState({\r\n                activeUserLiked: false,\r\n                numOfLikes: state.numOfLikes-1\r\n            });\r\n            props.unlikeComment(props.postOwner, props.postUuid, props.comment.commentUuid, props.authToken, props.postKey, props.commentKey);\r\n        } else {\r\n            this.setState({\r\n                activeUserLiked: true,\r\n                numOfLikes: state.numOfLikes+1\r\n            });\r\n            props.likeComment(props.postOwner, props.postUuid, props.comment.commentUuid, props.authToken, props.postKey, props.commentKey);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n        const comment = props.comment;\r\n        const state = this.state;\r\n\r\n        const renderAvatar = (\r\n                <ProfilePic s3ImageUri={comment.posterProfilePicUri} userFirstName={comment.firstName}\r\n                            userUuid={comment.userUuid} styleOverride={classes.avatar}\r\n                />\r\n        );\r\n\r\n        const likeButton = (\r\n            <React.Fragment>\r\n                <IconButton onClick={this.toggleLike} className={classes.likeButton} color=\"primary\">\r\n                    {\r\n                        this.state.activeUserLiked ? (\r\n                            <Badge badgeContent={state.numOfLikes} color=\"secondary\">\r\n                                <Grow in={this.state.activeUserLiked}>\r\n                                    <FavoriteIcon/>\r\n                                </Grow>\r\n                            </Badge>\r\n                        ):(\r\n                            <Badge badgeContent={state.numOfLikes} color=\"secondary\">\r\n                                <FavoriteBorderIcon/>\r\n                            </Badge>\r\n                        )\r\n                    }\r\n                </IconButton>\r\n            </React.Fragment>\r\n        );\r\n\r\n        const renderTextBubble = (\r\n            <div className={classes.textInnerContainer}>\r\n                <Grid container direction=\"column\" alignContent=\"flex-start\" justify=\"flex-start\">\r\n                    <span>\r\n                        <span onClick={()=>props.navigateTo(comment.userUuid)} className={classes.commentTitle}>\r\n                            {comment.firstName.charAt(0).toUpperCase()+comment.firstName.substring(1)}\r\n                        </span>\r\n                        <span className={classes.text}>\r\n                            {comment.text}\r\n                        </span>\r\n                    </span>\r\n                </Grid>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignContent=\"flex-start\">\r\n                    <Grid item>\r\n                        {renderAvatar}\r\n                    </Grid>\r\n                    <Grid item xs className={classes.textContainer}>\r\n                        {renderTextBubble}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {likeButton}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentObject.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    likeComment: PropTypes.func.isRequired,\r\n    unlikeComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {navigateTo, likeComment, unlikeComment}))(CommentObject);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport CommentsIcon from '@material-ui/icons/CommentRounded';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport compose from \"recompose/compose\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport CommentObject from \"./CommentObject\";\r\nimport {fetchPostComments, likePost, unlikePost} from \"../../actions/postActions\";\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\nimport Badge from \"@material-ui/core/es/Badge/Badge\";\r\nimport {fetchImage} from \"../../actions/imageActions\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\n\r\nconst styles = theme => ({\r\n    postContainer: {\r\n        width: 500,\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    },\r\n    postTitle: {\r\n        cursor: \"pointer\",\r\n        paddingTop: 0,\r\n        marginBottom: -10,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 18,\r\n        color: deepPurple[500]\r\n    },\r\n    postHeader: {\r\n        marginTop: 0,\r\n        paddingBottom: 0\r\n    },\r\n    postBody: {\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    postFooter: {\r\n        paddingBottom: 8,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 0\r\n    },\r\n    postOptions: {\r\n        padding: 4,\r\n        background: \"transparent\"\r\n    },\r\n    avatar: {\r\n        color: yellow[500],\r\n        backgroundColor: deepPurple[500]\r\n    },\r\n    avatarButton: {\r\n        padding: 0\r\n    },\r\n    actionButton: {\r\n        padding: 8,\r\n        background: \"transparent\"\r\n    },\r\n    middleIconSpace: {\r\n        flexGrow: 1,\r\n        minWidth: 100\r\n    },\r\n    sideIconSpace: {\r\n        width: 100\r\n    },\r\n    textBodyFont: {\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 16\r\n    },\r\n    textSubheaderFont: {\r\n        fontFamily: 'PTSanseCaptionRegular',\r\n        fontSize: 14,\r\n        paddingTop: 4\r\n    },\r\n    innerContainer: {\r\n        zIndex: 10,\r\n        position: 'relative'\r\n    },\r\n    commentsContainer: {\r\n        backgroundColor: theme.palette.primary[\"50\"],\r\n        paddingTop: 16,\r\n        paddingLeft: 12,\r\n        paddingRight: 12,\r\n        paddingBottom: 0,\r\n        width: 500,\r\n        maxHeight: 350\r\n    },\r\n    commentsSection: {\r\n        zIndex: 0,\r\n        position: 'relative',\r\n        bottom: 8\r\n    },\r\n    commentSectionItem: {\r\n        paddingTop: 4,\r\n        paddingBottom: 0\r\n    },\r\n    shareIcon: {\r\n        marginRight: 4\r\n    },\r\n    moreCommentsButton: {\r\n        cursor: \"pointer\",\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 14,\r\n        color: deepPurple[500],\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    commentsIcon: {\r\n        maxWidth: 20,\r\n        maxHeight: 20\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    authToken: state.accountAccess.authToken,\r\n    activeUser: state.accountAccess.activeUser,\r\n    updatePostTrigger: state.posts.updatePostTrigger,\r\n    imageRepo: state.images\r\n});\r\n\r\nclass PostObject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let liked = false;\r\n        if(!(props.post.liked == null)) {\r\n            liked = props.post.liked\r\n        }\r\n        let howLongAgo = Date.now() - props.post.when;\r\n        let whenPosted;\r\n        if(howLongAgo < 180000) {\r\n            whenPosted = 'Just now';\r\n        } else if(howLongAgo < 3.6*10**6) {\r\n            let mins = Math.floor(howLongAgo/60000);\r\n            whenPosted = mins.toString()+' min ago';\r\n        } else if(howLongAgo < 8.64*10**7) {\r\n            let hrs = Math.floor(howLongAgo/(3.6*10**6));\r\n            whenPosted = hrs.toString()+' hrs ago';\r\n        } else if(howLongAgo < 1.728*10**8) {\r\n            whenPosted = 'Yesterday';\r\n        } else {\r\n            whenPosted = new Date(props.post.when).toDateString();\r\n        }\r\n\r\n        let numOfLikes = 0;\r\n        if(props.post.numOfLikes !== undefined) {\r\n            numOfLikes = props.post.numOfLikes;\r\n        }\r\n\r\n        let numOfComments = 0;\r\n        if(props.post.numOfComments !== undefined) {\r\n            numOfComments = props.post.numOfComments;\r\n        }\r\n\r\n        let commentPageToken = \"0\";\r\n        if(props.post.commentPageToken !== undefined) {\r\n            commentPageToken = props.post.commentPageToken;\r\n        }\r\n\r\n        this.state = {\r\n            activeUserLiked: liked,\r\n            whenPosted: whenPosted,\r\n            numOfLikes: numOfLikes,\r\n            numOfComments: numOfComments,\r\n            commentPageToken: commentPageToken,\r\n            showComments: false,\r\n            localImgUrl: null\r\n        };\r\n\r\n        this.commentFetching = false;\r\n\r\n        this.toggleLike = this.toggleLike.bind(this);\r\n        this.fetchComments = this.fetchComments.bind(this);\r\n        this.updatePostState = this.updatePostState.bind(this);\r\n        this.toggleCommentsSection = this.toggleCommentsSection.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        if(props.post.s3ImgUri !== \"\") {\r\n            if(props.imageRepo[props.post.s3ImgUri] === undefined) {\r\n                props.fetchImage(props.post.s3ImgUri, props.authToken, \"post\");\r\n            } else {\r\n                this.setState({\r\n                    localImgUrl: props.imageRepo[props.post.s3ImgUri]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.imageRepo[this.props.post.s3ImgUri] !== prevProps.imageRepo[prevProps.post.s3ImgUri]) {\r\n            this.setState({\r\n                localImgUrl: this.props.imageRepo[this.props.post.s3ImgUri]\r\n            })\r\n        }\r\n        if(this.props.comments !== prevProps.comments) {\r\n            this.setState({\r\n                numOfLikes: this.props.post.numOfLikes,\r\n                commentPageToken: this.props.post.commentPageToken,\r\n                numOfComments: this.props.post.numOfComments\r\n            })\r\n        }\r\n        if(this.props.owner !== prevProps.owner) {\r\n            this.setState({\r\n                numOfLikes: this.props.post.numOfLikes,\r\n                numOfComments: this.props.post.numOfComments\r\n            })\r\n        }\r\n        if(this.props.post !== prevProps.post) {\r\n            this.updatePostState();\r\n        }\r\n        if(this.props.updatePostTrigger !== prevProps.updatePostTrigger) {\r\n            this.updatePostState();\r\n        }\r\n    }\r\n\r\n    updatePostState = () => {\r\n        const props = this.props;\r\n\r\n        let liked = false;\r\n        if(!(props.post.liked == null)) {\r\n            liked = props.post.liked\r\n        }\r\n        let howLongAgo = Date.now() - props.post.when;\r\n        let whenPosted;\r\n        if(howLongAgo < 180000) {\r\n            whenPosted = 'Just now';\r\n        } else if(howLongAgo < 3.6*10**6) {\r\n            let mins = Math.floor(howLongAgo/60000);\r\n            whenPosted = mins.toString()+' min ago';\r\n        } else if(howLongAgo < 8.64*10**7) {\r\n            let hrs = Math.floor(howLongAgo/(3.6*10**6));\r\n            whenPosted = hrs.toString()+' hrs ago';\r\n        } else if(howLongAgo < 1.728*10**8) {\r\n            whenPosted = 'Yesterday';\r\n        } else {\r\n            whenPosted = new Date(props.post.when).toDateString();\r\n        }\r\n\r\n        let numOfLikes = 0;\r\n        if(props.post.numOfLikes !== undefined) {\r\n            numOfLikes = props.post.numOfLikes;\r\n        }\r\n\r\n        let numOfComments = 0;\r\n        if(props.post.numOfComments !== undefined) {\r\n            numOfComments = props.post.numOfComments;\r\n        }\r\n\r\n        let commentPageToken = \"0\";\r\n        if(props.post.commentPageToken !== undefined) {\r\n            commentPageToken = props.post.commentPageToken;\r\n        }\r\n\r\n        let localImgUrl = null;\r\n        if(props.post.s3ImgUri !== \"\") {\r\n            if(props.imageRepo[props.post.s3ImgUri] === undefined) {\r\n                props.fetchImage(props.post.s3ImgUri, props.authToken, \"post\");\r\n            } else {\r\n                localImgUrl = props.imageRepo[props.post.s3ImgUri]\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activeUserLiked: liked,\r\n            whenPosted: whenPosted,\r\n            numOfLikes: numOfLikes,\r\n            numOfComments: numOfComments,\r\n            commentPageToken: commentPageToken,\r\n            showComments: this.commentFetching,\r\n            localImgUrl: localImgUrl\r\n        }, () => {\r\n            this.commentFetching = false;\r\n        })\r\n    };\r\n    toggleLike = () => {\r\n        const props = this.props;\r\n        const post = props.post;\r\n        if(this.state.activeUserLiked) {\r\n            this.setState({\r\n                activeUserLiked: false,\r\n                numOfLikes: this.state.numOfLikes-1\r\n            });\r\n            props.unlikePost(props.owner, post.postUuid, props.authToken, props.postKey);\r\n        } else {\r\n            this.setState({\r\n                activeUserLiked: true,\r\n                numOfLikes: this.state.numOfLikes+1\r\n            });\r\n            props.likePost(props.owner, post.postUuid, props.authToken, props.postKey);\r\n        }\r\n    };\r\n    toggleCommentsSection = () => {\r\n        if(this.state.numOfComments > 0 && this.state.commentPageToken === \"0\") {\r\n            this.fetchComments();\r\n        } else {\r\n            this.setState({\r\n                showComments: !this.state.showComments\r\n            })\r\n        }\r\n    };\r\n    fetchComments = () => {\r\n        if(this.state.commentPageToken === \"\") {\r\n            return;\r\n        }\r\n        this.commentFetching = true;\r\n        this.props.fetchPostComments(this.props.authToken, this.props.owner, this.props.post.postUuid,\r\n            this.props.postKey, this.state.commentPageToken);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const state = this.state;\r\n        const classes = this.props.classes;\r\n\r\n        const postAvatar = (\r\n            <ProfilePic s3ImageUri={props.post.posterProfilePicUri} userFirstName={props.post.firstName} userUuid={props.post.userUuid}/>\r\n        );\r\n\r\n        let postTitle = (\r\n            <div onClick={()=>{props.navigateTo(props.post.userUuid)}} className={classes.postTitle}>\r\n                {props.post.firstName.charAt(0).toUpperCase()+props.post.firstName.substring(1)}\r\n            </div>\r\n        );\r\n        if(props.post.owner !== props.post.userUuid) {\r\n            postTitle = (\r\n                <div>\r\n                   <span onClick={()=>{props.navigateTo(props.post.userUuid)}} className={classes.postTitle}>\r\n                       {props.post.firstName.charAt(0).toUpperCase()+props.post.firstName.substring(1)}\r\n                   </span>\r\n                    <span>\r\n                        {\" posted on \"}\r\n                    </span>\r\n                    <span onClick={()=>{props.navigateTo(props.post.owner)}} className={classes.postTitle}>\r\n                        {props.post.ownerFirstName.charAt(0).toUpperCase()+props.post.ownerFirstName.substring(1)+\"'s\"}\r\n                    </span>\r\n                    <span>\r\n                        {\" profile\"}\r\n                    </span>\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n        const postSubheader = (\r\n            <div className={classes.textSubheaderFont}>\r\n                {state.whenPosted}\r\n            </div>\r\n        );\r\n        // const postOptions = (\r\n        //     <IconButton className={classes.postOptions} color=\"primary\">\r\n        //         <MoreVertIcon />\r\n        //     </IconButton>\r\n        // );\r\n        const likeButton = (\r\n            <React.Fragment>\r\n                <IconButton onClick={this.toggleLike} className={classes.actionButton} color=\"primary\">\r\n                        {\r\n                            state.activeUserLiked ?\r\n                                (\r\n                                    <Badge badgeContent={state.numOfLikes} color={\"secondary\"}>\r\n                                        <Grow in={state.activeUserLiked}>\r\n                                            <FavoriteIcon/>\r\n                                        </Grow>\r\n                                    </Badge>\r\n                                ):\r\n                                (\r\n                                    <Badge badgeContent={state.numOfLikes} color={\"secondary\"}>\r\n                                        <FavoriteBorderIcon/>\r\n                                    </Badge>\r\n                                )\r\n                        }\r\n                </IconButton>\r\n            </React.Fragment>\r\n        );\r\n        const postBody = (\r\n            <React.Fragment>\r\n                <div className={classes.textBodyFont}>\r\n                    {props.post.text}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n        let imageBody = null;\r\n        if(state.localImgUrl !== null) {\r\n            imageBody = (\r\n                <div>\r\n                    <div style={{height: 4}}/>\r\n                    <img alt=\"\" src={state.localImgUrl}/>\r\n                    <div style={{height: 4}}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const commentButton = (\r\n            <React.Fragment>\r\n                <IconButton onClick={this.toggleCommentsSection} className={classes.actionButton} color=\"primary\">\r\n                    <Badge badgeContent={state.numOfComments} color={\"secondary\"}>\r\n                        <CommentsIcon/>\r\n                    </Badge>\r\n                </IconButton>\r\n            </React.Fragment>\r\n        );\r\n        const commentSection = (\r\n            <React.Fragment>\r\n                <Paper data-simplebar className={classes.commentsContainer}>\r\n                    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\r\n                        <Grid item>\r\n                            <CommentForm postUuid={props.post.postUuid} postKey={props.postKey} postOwnerUuid={props.owner}/>\r\n                        </Grid>\r\n                        {\r\n                            props.comments !== undefined &&\r\n                                    <React.Fragment>\r\n                                        {props.comments.length > 0 &&\r\n                                        <React.Fragment>\r\n                                        {\r\n                                            props.comments.map((comment, index) => (\r\n                                                <div key={index}>\r\n                                                    {\r\n                                                        state.showComments &&\r\n                                                        <Grid className={classes.commentSectionItem} key={index} item>\r\n                                                            <CommentObject comment={comment} postOwner={props.owner} postUuid={props.post.postUuid}\r\n                                                                           postKey={props.postKey} commentKey={index}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    }\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                        </React.Fragment>\r\n                                        }\r\n                                        {\r\n                                            this.state.numOfComments === props.comments.length ?\r\n                                                (\r\n                                                    <div style={{height: 7}}/>\r\n                                                ):\r\n                                                (\r\n                                                    <React.Fragment>\r\n                                                        <Grid item container direction=\"row\" justify=\"center\"\r\n                                                              className={classes.moreCommentsButton} onClick={this.fetchComments}>\r\n                                                            <CommentsIcon className={classes.commentsIcon}/>\r\n                                                            {\"Load More Comments\"}\r\n                                                        </Grid>\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                        }\r\n                                    </React.Fragment>\r\n                        }\r\n                        {\r\n                            props.comments === undefined && <div style={{height: 7}}/>\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.postContainer}>\r\n                <div className={classes.innerContainer}>\r\n                    <Card>\r\n                        <CardHeader className={classes.postHeader} avatar={postAvatar}\r\n                                    title={postTitle} subheader={postSubheader}/>\r\n                        <CardContent className={classes.postBody}>\r\n                            <div>\r\n                                {postBody}\r\n                            </div>\r\n                        </CardContent>\r\n                        {imageBody}\r\n                        <CardActions className={classes.postFooter}>\r\n                            <div className={classes.sideIconSpace}/>\r\n                            {likeButton}\r\n                            <div className={classes.middleIconSpace}/>\r\n                            {commentButton}\r\n                            <div className={classes.sideIconSpace}/>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n                <div className={classes.commentsSection}>\r\n                    {commentSection}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPostObject.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    activeUser: PropTypes.object.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    updatePostTrigger: PropTypes.bool.isRequired,\r\n    postKey: PropTypes.number.isRequired,\r\n    fetchPostComments: PropTypes.func.isRequired,\r\n    likePost: PropTypes.func.isRequired,\r\n    unlikePost: PropTypes.func.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    owner: PropTypes.string.isRequired,\r\n    comments: PropTypes.array,\r\n    fetchImage: PropTypes.func.isRequired,\r\n    imageRepo: PropTypes.object\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {\r\n    fetchPostComments, likePost, unlikePost, navigateTo, fetchImage\r\n}))(PostObject);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\n\r\nimport {createPost} from \"../../actions/postActions\";\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from \"@material-ui/core/es/CardActionArea/CardActionArea\";\r\nimport Switch from \"@material-ui/core/es/Switch/Switch\";\r\nimport IconButton from \"@material-ui/core/es/IconButton/IconButton\";\r\nimport InputBase from \"@material-ui/core/es/InputBase/InputBase\";\r\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport grey from \"@material-ui/core/es/colors/grey\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport Dialog from \"@material-ui/core/es/Dialog/Dialog\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport DialogTitle from \"@material-ui/core/es/DialogTitle/DialogTitle\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        color: yellow[500],\r\n        backgroundColor: deepPurple[500]\r\n    },\r\n    avatarContainerDefault: {\r\n        paddingTop: 16,\r\n        paddingLeft: 16,\r\n        paddingRight: 0,\r\n        paddingBottom: 16,\r\n        marginRight: -8\r\n    },\r\n    avatarContainerEditing: {\r\n        paddingTop: 16,\r\n        paddingLeft: 16,\r\n        paddingRight: 8,\r\n        paddingBottom: 0\r\n    },\r\n    formContainer: {\r\n        width: 500,\r\n        paddingTop: 4,\r\n        paddingBottom: 8\r\n    },\r\n    formCard: {\r\n        padding: 16\r\n    },\r\n    formHeader: {\r\n        paddingTop: 16,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 4\r\n    },\r\n    headerTitle: {\r\n        cursor: \"pointer\",\r\n        paddingTop: 0,\r\n        marginBottom: -10,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 18,\r\n        color: deepPurple[500]\r\n    },\r\n    textField: {\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 16\r\n    },\r\n    textFieldContainer: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 4,\r\n        paddingTop: 4\r\n    },\r\n    addPhotoIcon: {\r\n        paddingBottom: 16,\r\n        paddingRight: 16,\r\n        paddingLeft: 0,\r\n        paddingTop: 16,\r\n        maxWidth: 40\r\n    },\r\n    addPhotoSmallButton: {\r\n        padding: 8\r\n    },\r\n    addPhotoText: {\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 14,\r\n        color: deepPurple[500]\r\n    },\r\n    addPhotoArea: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    submitButton: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 8,\r\n        paddingTop: 8,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 16,\r\n        backgroundColor: deepPurple[500],\r\n        color: yellow[500]\r\n    },\r\n    switchLabelText: {\r\n        fontFamily: 'PTSansBold',\r\n        fontSize: 14,\r\n        color: deepPurple[500]\r\n    },\r\n    switchLabelTextDisabled: {\r\n        fontFamily: 'PTSansBold',\r\n        fontSize: 14,\r\n        color: grey[500]\r\n    },\r\n    privacyLabel: {\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 14,\r\n        color: deepPurple[500]\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    activeUser: state.accountAccess.activeUser,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            textFieldRef: null,\r\n            formRef: null,\r\n            editMode: false,\r\n            showFriends: true,\r\n            showEveryone: false,\r\n            disableShareToEveryone: false,\r\n            imageFile: null,\r\n            imagePreviewUrl: '',\r\n            openEditImageDialog: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.switchChange = this.switchChange.bind(this);\r\n        this.startClickListening = this.startClickListening.bind(this);\r\n        this.stopClickListening = this.stopClickListening.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.enableEditing = this.enableEditing.bind(this);\r\n        this.disableEditing = this.disableEditing.bind(this);\r\n        this.openImageDialog = this.openImageDialog.bind(this);\r\n        this.closeImageDialog = this.closeImageDialog.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.startClickListening();\r\n    }\r\n    componentWillUnmount() {\r\n        this.stopClickListening();\r\n    }\r\n\r\n    onChange(e) {\r\n        if(e.target.name === 'postImage') {\r\n            if (e.target.files.length > 0) {\r\n                this.setState({\r\n                    imageFile: e.target.files[0],\r\n                    imagePreviewUrl: URL.createObjectURL(e.target.files[0])\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[e.target.name]: e.target.value});\r\n        }\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const post = {\r\n            text: this.state.text,\r\n            showFriends: this.state.showFriends,\r\n            showEveryone: this.state.showEveryone\r\n        };\r\n\r\n        this.props.createPost(post, this.state.imageFile, this.props.authToken, this.props.targetUser);\r\n\r\n        this.setState({\r\n            text: '',\r\n            imageFile: null,\r\n            imagePreviewUrl: '',\r\n            editMode: false\r\n        })\r\n    }\r\n    switchChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked\r\n        }, () => {\r\n            if (!this.state.showFriends) {\r\n                this.setState({\r\n                    showEveryone: false,\r\n                    disableShareToEveryone: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    disableShareToEveryone: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setTextFieldRef = node => {\r\n        this.setState({\r\n            textFieldRef: node\r\n        })\r\n    };\r\n    setFormRef = node => {\r\n        this.setState({\r\n            formRef: node\r\n        })\r\n    };\r\n\r\n    startClickListening = () => {\r\n        document.addEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    stopClickListening = () => {\r\n        document.removeEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    handleClick = (e) => {\r\n        if (this.state.textFieldRef == null || this.state.openEditImageDialog) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.textFieldRef.contains(e.target)) {\r\n            this.enableEditing();\r\n        } else if (!this.state.formRef.contains(e.target)) {\r\n            this.disableEditing();\r\n        }\r\n    };\r\n    enableEditing = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n    disableEditing = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    };\r\n\r\n    openImageDialog = () => {\r\n        this.setState({\r\n            openEditImageDialog: true\r\n        })\r\n    };\r\n    closeImageDialog = () => {\r\n        this.setState({\r\n            openEditImageDialog: false\r\n        })\r\n    };\r\n    removeImage = () => {\r\n        this.setState({\r\n            imageFile: null,\r\n            imagePreviewUrl: '',\r\n            openEditImageDialog: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n        const state = this.state;\r\n\r\n        const renderAvatar = (\r\n                <ProfilePic s3ImageUri={props.activeUser.profilePic} userUuid={props.activeUser.uuid}\r\n                            userFirstName={props.activeUser.firstName}\r\n                />\r\n        );\r\n\r\n        const renderTextField = (\r\n            <div ref={this.setTextFieldRef}>\r\n                <InputBase className={classes.textField} placeholder=\"What's up?\" multiline={true} fullWidth={true}\r\n                           autoComplete=\"off\" rowsMax={6} name=\"text\" onChange={this.onChange} value={this.state.text}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        const renderAddImage = (\r\n            <React.Fragment>\r\n                <input style={{display: 'none'}} type=\"file\" name=\"postImage\" accept=\".jpg, .jpeg, .png\"\r\n                       onChange={this.onChange} ref={fileInput => this.fileInput = fileInput}\r\n                />\r\n                <IconButton onClick={()=>this.fileInput.click()} className={classes.addPhotoSmallButton} color=\"primary\">\r\n                    <AddPhotoIcon/>\r\n                </IconButton>\r\n            </React.Fragment>\r\n        );\r\n\r\n        let imageArea = null;\r\n        if(state.editMode) {\r\n            if(state.imagePreviewUrl === '') {\r\n                imageArea = (\r\n                    <div>\r\n                        <input style={{display: 'none'}} type=\"file\" name=\"postImage\" accept=\".jpg, .jpeg, .png\"\r\n                               onChange={this.onChange} ref={fileInput => this.fileInput = fileInput}\r\n                        />\r\n                        <CardActionArea onClick={()=>this.fileInput.click()} className={classes.addPhotoArea}>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <AddPhotoIcon color=\"primary\"/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <span className={classes.addPhotoText}>\r\n                                        Add Image\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardActionArea>\r\n                    </div>\r\n                );\r\n            } else {\r\n                imageArea = (\r\n                    <Button style={{padding: 0}} onClick={this.openImageDialog}>\r\n                        <img alt=\"\" src={state.imagePreviewUrl}/>\r\n                    </Button>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        let renderPrivacySwitches = (<div/>);\r\n        if(props.targetUser === props.activeUser.uuid) {\r\n            renderPrivacySwitches = (\r\n                <React.Fragment>\r\n                    <Grid style={{maxWidth: 250, paddingTop: 8}} spacing={0}\r\n                          item container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <span className={classes.privacyLabel}>\r\n                                Who should see this?\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid item container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <span className={classes.switchLabelText}>\r\n                                    Friends\r\n                                </span>\r\n                                <Switch checked={this.state.showFriends} onChange={this.switchChange} name=\"showFriends\"\r\n                                        color=\"primary\" style={{maxHeight: 20}}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {\r\n                                    !this.state.disableShareToEveryone ?\r\n                                        (\r\n                                            <span className={classes.switchLabelText}>\r\n                                            Everyone\r\n                                        </span>\r\n                                        ) : (\r\n                                            <span className={classes.switchLabelTextDisabled}>\r\n                                            Everyone\r\n                                        </span>\r\n                                        )\r\n                                }\r\n                                <Switch onChange={this.switchChange} name=\"showEveryone\"\r\n                                        checked={this.state.showEveryone} color=\"primary\"\r\n                                        disabled={this.state.disableShareToEveryone} style={{maxHeight: 20}}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={classes.formContainer} ref={this.setFormRef}>\r\n                <Card>\r\n                    {\r\n                        this.state.editMode &&\r\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                            <Grid item className={classes.avatarContainerEditing}>{renderAvatar}</Grid>\r\n                            <Grid item className={classes.headerTitle}>New Post</Grid>\r\n                            <Grid xs item/>\r\n                            {renderPrivacySwitches}\r\n                        </Grid>\r\n                    }\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        {\r\n                            !this.state.editMode &&\r\n                            <Grid item className={classes.avatarContainerDefault}>\r\n                                {renderAvatar}\r\n                            </Grid>\r\n                        }\r\n                        <Grid item xs className={classes.textFieldContainer}>\r\n                            {renderTextField}\r\n                        </Grid>\r\n                        {\r\n                            !this.state.editMode &&\r\n                            <Grid item container className={classes.addPhotoIcon}\r\n                                  direction=\"row\" justify=\"flex-end\" alignItems=\"center\"\r\n                            >\r\n                                <Grid item>{renderAddImage}</Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                    {imageArea}\r\n                    {\r\n                        this.state.editMode &&\r\n                        <CardActionArea onClick={this.onSubmit}>\r\n                            <Grid item container className={classes.submitButton} direction=\"row\"\r\n                                  justify=\"center\" alignItems=\"center\"\r\n                            >\r\n                                <Grid item>\r\n                                    Submit New Post\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardActionArea>\r\n                    }\r\n                </Card>\r\n                <Dialog open={state.openEditImageDialog} onClose={this.closeImageDialog}>\r\n                    <DialogTitle>\r\n                        Remove Image?\r\n                    </DialogTitle>\r\n                    <Button onClick={this.removeImage}>Yes</Button>\r\n                    <Button onClick={this.closeImageDialog} color=\"primary\">No</Button>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPostForm.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    createPost: PropTypes.func.isRequired,\r\n    targetUser: PropTypes.string.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    activeUser: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {createPost}))(PostForm);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\nimport {respondToRequest} from \"../../actions/friendActions\";\r\n\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\n\r\nconst styles = theme => ({\r\n        mainContainer: {\r\n            padding: 0,\r\n            width: 400\r\n        },\r\n        title: {\r\n            cursor: \"pointer\",\r\n            paddingTop: 0,\r\n            marginBottom: -4,\r\n            fontFamily: 'PTSansCaptionBold',\r\n            fontSize: 16,\r\n            color: deepPurple[500]\r\n        },\r\n        subheader: {\r\n            fontFamily: 'PTSanseCaptionRegular',\r\n            fontSize: 16,\r\n            marginTop: -6\r\n        },\r\n        avatar: {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: theme.palette.primary.main,\r\n            marginRight: -8\r\n        },\r\n        acceptButton: {\r\n            color: theme.palette.secondary.main,\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 8,\r\n            paddingRight: 8,\r\n            textTransform: 'none'\r\n        },\r\n        ignoreButton: {\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 8,\r\n            paddingRight: 8,\r\n            textTransform: 'none',\r\n            backgroundColor: theme.palette.grey[\"300\"],\r\n            color: theme.palette.grey.A400\r\n        },\r\n        actionsContainer: {\r\n            marginTop: 12,\r\n        }\r\n    });\r\n\r\nconst mapStateToProps = state => ({\r\n    authToken: state.accountAccess.authToken,\r\n    activeUserUuid: state.accountAccess.activeUser.uuid\r\n});\r\n\r\nclass FriendMenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buttonRef: null\r\n        };\r\n        this.setButtonRef = this.setButtonRef.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    setButtonRef = node => {\r\n        this.setState({\r\n            buttonRef: node\r\n        })\r\n    };\r\n    handleClick = (e) => {\r\n        let userUuid = this.props.userObject.userUuid;\r\n        if(this.state.buttonRef === null) {\r\n            this.props.navigateTo(userUuid);\r\n            return;\r\n        }\r\n        if(!this.state.buttonRef.contains(e.target)) {\r\n            this.props.navigateTo(userUuid);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const user = this.props.userObject;\r\n\r\n        // const avatar = (\r\n        //     <Avatar className={classes.avatar}>\r\n        //         {user.firstName.charAt(0).toUpperCase()+user.lastName.charAt(0).toUpperCase()}\r\n        //     </Avatar>\r\n        // );\r\n        const avatar = (\r\n            <ProfilePic s3ImageUri={user.profilePicUri} userUuid={user.userUuid} userFirstName={user.firstName}/>\r\n        );\r\n        const title = (\r\n            <div className={classes.title}>\r\n                {user.firstName.charAt(0).toUpperCase()+user.firstName.substring(1)+\" \"+\r\n                user.lastName.charAt(0).toUpperCase()+user.lastName.substring(1)}\r\n            </div>\r\n        );\r\n\r\n        let subheader = null;\r\n        if(this.props.type !== 'friend') {\r\n            subheader = (\r\n                <div className={classes.subheader}>\r\n                    {user.numOfMutualFriends+\" mutual friends\"}\r\n                </div>\r\n            );\r\n        } else {\r\n            subheader = (\r\n                <div className={classes.subheader}>\r\n                    {\"Friends since \"+new Date(user.since).toDateString()}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let requestActions;\r\n        switch (this.props.type) {\r\n            case \"request\":\r\n                requestActions = (\r\n                    <div className={classes.actionsContainer}>\r\n                        <span ref={this.setButtonRef}>\r\n                            <Button onClick={()=>this.props.respondToRequest(this.props.authToken, this.props.activeUserUuid,\r\n                                user.userUuid, \"accepted\", this.props.requestKey)} className={classes.acceptButton}\r\n                                    color=\"primary\" variant=\"contained\">\r\n                                Accept\r\n                            </Button>\r\n                            <Button onClick={()=>this.props.respondToRequest(this.props.authToken, this.props.activeUserUuid,\r\n                                user.userUuid, \"ignored\", this.props.requestKey)} className={classes.ignoreButton}\r\n                                    variant=\"contained\">\r\n                                Ignore\r\n                            </Button>\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"accepted\":\r\n                requestActions = (\r\n                    <div className={classes.actionsContainer}>\r\n                        <Button className={classes.acceptButton} disabled={true} color=\"primary\" variant=\"contained\">\r\n                            Accepted\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"ignored\":\r\n                requestActions = (\r\n                    <div className={classes.actionsContainer}>\r\n                        <Button className={classes.ignoreButton} disabled={true} variant=\"contained\">\r\n                            Ignored\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                requestActions = null;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CardHeader onClick={(e)=>this.handleClick(e)} className={classes.mainContainer} avatar={avatar}\r\n                            title={title} subheader={subheader} action={requestActions}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nFriendMenuItem.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    activeUserUuid: PropTypes.string.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    respondToRequest: PropTypes.func.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    userObject: PropTypes.object.isRequired,\r\n    requestKey: PropTypes.number\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {navigateTo, respondToRequest}))(FriendMenuItem);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardHeader from \"@material-ui/core/es/CardHeader\";\r\nimport CardContent from \"@material-ui/core/es/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/es/Card\";\r\nimport {fetchUserFriends} from \"../../actions/friendActions\";\r\nimport Dialog from \"@material-ui/core/es/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/es/DialogTitle/DialogTitle\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\nimport 'simplebar';\r\nimport 'simplebar/dist/simplebar.css';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FriendMenuItem from \"../HeaderComponents/FriendMenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nconst styles = theme => ({\r\n    friendsBox: {\r\n        width: 300,\r\n        padding: 0\r\n    },\r\n    boxPicItemContainer: {\r\n        width: 92,\r\n        height: 92\r\n    },\r\n    boxPicItem: {\r\n        width: 88,\r\n        height: 88,\r\n        borderRadius: 0,\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    boxHeader: {\r\n        paddingTop: 12,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 0\r\n    },\r\n    boxContent: {\r\n        paddingTop: 8,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 8\r\n    },\r\n    openMenuButton: {\r\n        color: theme.palette.primary.main,\r\n        padding: 0,\r\n        textTransform: 'none',\r\n        marginTop: 8,\r\n        marginBottom: 8\r\n    },\r\n    seeMoreFriendsButton: {\r\n        color: theme.palette.primary.main,\r\n        padding: 0,\r\n        textTransform: 'none'\r\n    },\r\n    menuItem: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n        paddingLeft: 12,\r\n        paddingRight: 12\r\n    },\r\n    scrollable: {\r\n        width: 400,\r\n        maxHeight: 400,\r\n        padding: 0\r\n    },\r\n    menuTitle: {\r\n        color: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    friendsRepo: state.friendAccess,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass FriendsBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openMenu: false\r\n        };\r\n\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        if(props.friendsRepo[props.targetUser] === undefined) {\r\n            props.fetchUserFriends(props.authToken, props.targetUser, \"0\");\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const props = this.props;\r\n        if(props.targetUser !== prevProps.targetUser) {\r\n            if(props.friendsRepo[props.targetUser] === undefined) {\r\n                props.fetchUserFriends(props.authToken, props.targetUser, \"0\");\r\n            }\r\n        }\r\n    }\r\n\r\n    openMenu = () => {\r\n        this.setState({\r\n            openMenu: true\r\n        })\r\n    };\r\n    closeMenu = () => {\r\n        this.setState({\r\n            openMenu: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const state = this.state;\r\n        const props = this.props;\r\n        if(props.friendsRepo[props.targetUser] === undefined) {\r\n            return (<div/>);\r\n        }\r\n        const friendObjects = props.friendsRepo[props.targetUser].friends;\r\n        let shortArray = [...friendObjects];\r\n        let sliceMax = shortArray.length;\r\n        if(sliceMax > 9) {\r\n            sliceMax = 9;\r\n        }\r\n\r\n        const openMenuButton = (\r\n            <Button onClick={this.openMenu} variant=\"contained\" className={classes.openMenuButton}>\r\n                See All\r\n            </Button>\r\n        );\r\n        let seeMoreFriendsButton = (\r\n            <Button variant=\"contained\" className={classes.seeMoreFriendsButton}\r\n                    onClick={()=>props.fetchUserFriends(props.authToken, props.targetUser,\r\n                                                        props.friendsRepo[props.targetUser].pageToken)}\r\n            >\r\n                Show More Friends\r\n            </Button>\r\n        );\r\n        if(props.friendsRepo[props.targetUser].pageToken === \"\") {\r\n            seeMoreFriendsButton = (<div style={{height: 24}}/>);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Card className={classes.friendsBox}>\r\n                    <CardHeader className={classes.boxHeader} title={'Friends'} action={openMenuButton}/>\r\n                    <CardContent className={classes.boxContent}>\r\n                        <Grid container spacing={8} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            {shortArray.slice(0, sliceMax).map((friendObject, index) => (\r\n                                <Grid key={index} item className={classes.boxPicItemContainer}>\r\n                                    <ProfilePic styleOverride={classes.boxPicItem} userUuid={friendObject.userUuid}\r\n                                                userFirstName={friendObject.firstName}\r\n                                                s3ImageUri={friendObject.profilePicUri}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n                <Dialog open={state.openMenu} onClose={this.closeMenu}>\r\n                    <DialogTitle>\r\n                        {\r\n                            props.targetFirstName.charAt(0).toUpperCase()+\r\n                            props.targetFirstName.substring(1)+ \"'s Friends\"\r\n                        }\r\n                    </DialogTitle>\r\n                    <div data-simplebar className={classes.scrollable}>\r\n                        <MenuList >\r\n                            {friendObjects.map((friendObject, index) => (\r\n                                <MenuItem key={index} className={classes.menuItem}>\r\n                                    <FriendMenuItem userObject={friendObject} type={friendObject.type}/>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </MenuList>\r\n                    </div>\r\n                    {seeMoreFriendsButton}\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFriendsBox.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    fetchUserFriends: PropTypes.func.isRequired,\r\n    friendsRepo: PropTypes.object.isRequired,\r\n\r\n    targetUser: PropTypes.string.isRequired,\r\n    targetFirstName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {fetchUserFriends}))(FriendsBox);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from \"recompose/compose\";\r\nimport {MenuList, withStyles} from \"@material-ui/core\";\r\nimport {fetchUserPosts} from \"../../actions/postActions\";\r\nimport {fetchUserProfile, saveNewBio, saveNewProfilePic} from \"../../actions/userActions\";\r\nimport {respondToRequest, deleteFriendRequest, sendFriendRequest, unfriend} from \"../../actions/friendActions\";\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\nimport {openPopout} from \"../../actions/popoutActions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PostObject from \"../PostComponents/PostObject\";\r\nimport PostForm from \"../PostComponents/PostForm\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/es/Card/Card\";\r\nimport CardHeader from \"@material-ui/core/es/CardHeader/CardHeader\";\r\nimport CardContent from \"@material-ui/core/es/CardContent/CardContent\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport AddFriendIcon from \"@material-ui/icons/PersonAddRounded\";\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from \"@material-ui/core/es/MenuItem/MenuItem\";\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\nimport TextField from \"@material-ui/core/es/TextField/TextField\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\nimport Dialog from \"@material-ui/core/es/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/es/DialogTitle/DialogTitle\";\r\nimport FriendsBox from \"../UserProfileComponents/FriendsBox\";\r\n\r\nconst styles = theme => ({\r\n    postsColumn: {\r\n        width: 500\r\n    },\r\n    sideColumn: {\r\n        width: 332\r\n    },\r\n    nameContainer: {\r\n        padding: 16\r\n    },\r\n    profileName: {\r\n        fontFamily: 'PTSansBold',\r\n        fontSize: 32,\r\n        color: theme.palette.primary.main\r\n    },\r\n    profilePicture: {\r\n        width: 200,\r\n        height: 200,\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    bioBox: {\r\n        width: 300\r\n    },\r\n    photosBox: {\r\n        width: 300,\r\n        padding: 0\r\n    },\r\n    friendsBox: {\r\n        width: 300,\r\n        padding: 0\r\n    },\r\n    boxPicItemContainer: {\r\n        width: 92,\r\n        height: 92\r\n    },\r\n    boxPicItem: {\r\n        width: 88,\r\n        height: 88\r\n    },\r\n    boxHeader: {\r\n        paddingTop: 12,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 0\r\n    },\r\n    boxContent: {\r\n        paddingTop: 8,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingBottom: 8\r\n    },\r\n    addFriendButton: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        color: theme.palette.secondary.main,\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        textTransform: 'none'\r\n    },\r\n    addFriendIcon: {\r\n        width: 24,\r\n        height: 24,\r\n        paddingRight: 4\r\n    },\r\n    friendsButton: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        color: theme.palette.secondary.main,\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        textTransform: 'none'\r\n    },\r\n    dropIcon: {\r\n        margin: -4,\r\n        paddingLeft: 4\r\n    },\r\n    greyStyle: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        color: theme.palette.grey.A400,\r\n        backgroundColor: theme.palette.grey[\"300\"],\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        textTransform: 'none'\r\n    },\r\n    ignoredButton: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        color: theme.palette.grey.A200,\r\n        backgroundColor: theme.palette.grey[\"300\"],\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        textTransform: 'none'\r\n    },\r\n    popoutButton: {\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        textColor: theme.palette.grey.A400,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    editButtons: {\r\n        color: theme.palette.primary.main,\r\n        padding: 0,\r\n        textTransform: 'none',\r\n        marginTop: 8,\r\n        marginBottom: 8\r\n\r\n    },\r\n    textField: {\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 16\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    authToken: state.accountAccess.authToken,\r\n    activeUser: state.accountAccess.activeUser,\r\n    postRepo: state.posts,\r\n    updatePostTrigger: state.posts.updatePostTrigger,\r\n    userProfileRepo: state.users\r\n});\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newBioContent: '',\r\n            editingBio: false,\r\n            bioBoxRef: null,\r\n            imageFile: null,\r\n            imagePreviewUrl: ''\r\n        };\r\n\r\n        this.shouldFetch = false;\r\n        this.previewingProfilePic = false;\r\n\r\n        this.startScrollListening = this.startScrollListening.bind(this);\r\n        this.stopScrollListening = this.stopScrollListening.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.editBio = this.editBio.bind(this);\r\n        this.setBioBoxRef = this.setBioBoxRef.bind(this);\r\n        this.startClickListening = this.startClickListening.bind(this);\r\n        this.stopClickListening = this.stopClickListening.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.previewProfilePic = this.previewProfilePic.bind(this);\r\n        this.submitProfilePic = this.submitProfilePic.bind(this);\r\n        this.closeProfilePicPreview = this.closeProfilePicPreview.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        this.shouldFetch = true;\r\n        if(props.postRepo[props.targetUser] === undefined) {\r\n            props.fetchUserPosts(props.targetUser, props.authToken, \"0\");\r\n        }\r\n        if(props.userProfileRepo[props.targetUser] === undefined) {\r\n            props.fetchUserProfile(props.targetUser, props.authToken);\r\n        }\r\n        this.startScrollListening();\r\n    }\r\n    componentWillUnmount() {\r\n        this.stopScrollListening();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.postRepo[this.props.targetUser] !== prevProps.postRepo[this.props.targetUser]) {\r\n            if(prevProps.postRepo[this.props.targetUser] === undefined) {\r\n                this.shouldFetch = true;\r\n            } else if(this.props.postRepo[this.props.targetUser].pageToken === \"\") {\r\n                this.shouldFetch = false;\r\n            } else if(this.props.postRepo[this.props.targetUser].pageToken !== prevProps.postRepo[this.props.targetUser].pageToken) {\r\n                this.shouldFetch = true;\r\n            }\r\n        }\r\n        if(this.props.targetUser !== prevProps.targetUser) {\r\n            if(this.props.postRepo[this.props.targetUser] === undefined) {\r\n                this.props.fetchUserPosts(this.props.targetUser, this.props.authToken, \"0\");\r\n            }\r\n            if(this.props.userProfileRepo[this.props.targetUser] === undefined) {\r\n                this.props.fetchUserProfile(this.props.targetUser, this.props.authToken);\r\n            }\r\n            this.shouldFetch = true;\r\n        }\r\n    }\r\n\r\n    editBio = () => {\r\n        if(this.state.editingBio) {\r\n            this.setState({\r\n                editingBio: false\r\n            });\r\n            this.stopClickListening();\r\n        } else {\r\n            this.setState({\r\n                editingBio: true\r\n            });\r\n            this.startClickListening();\r\n        }\r\n    };\r\n    setBioBoxRef = node => {\r\n        this.setState({\r\n            bioBoxRef: node\r\n        })\r\n    };\r\n    startClickListening = () => {\r\n        document.addEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    stopClickListening = () => {\r\n        document.removeEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    handleClick = (e) => {\r\n        if(this.state.bioBoxRef === null) {\r\n            return;\r\n        }\r\n\r\n        if(!this.state.bioBoxRef.contains(e.target)) {\r\n            this.setState({\r\n                editingBio: false\r\n            });\r\n            this.stopClickListening();\r\n            this.props.fetchUserProfile(this.props.targetUser, this.props.authToken);\r\n        }\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.saveNewBio(this.props.authToken, this.props.activeUser.uuid, this.state.newBioContent);\r\n        this.setState({\r\n            editingBio: false\r\n        });\r\n        this.stopClickListening();\r\n    };\r\n\r\n    startScrollListening = () => {\r\n        window.addEventListener('scroll', this.handleScroll, false)\r\n    };\r\n    stopScrollListening = () => {\r\n        window.removeEventListener('scroll', this.handleScroll, false)\r\n    };\r\n    handleScroll = () => {\r\n        if ((window.innerHeight+window.pageYOffset+400) >= document.body.offsetHeight) {\r\n            if(this.shouldFetch && this.props.postRepo[this.props.targetUser] !== undefined) {\r\n                this.props.fetchUserPosts(this.props.targetUser, this.props.authToken,\r\n                    this.props.postRepo[this.props.targetUser].pageToken);\r\n                this.shouldFetch = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    previewProfilePic = (e) => {\r\n        if (e.target.files.length > 0) {\r\n            this.setState({\r\n                imageFile: e.target.files[0],\r\n                imagePreviewUrl: URL.createObjectURL(e.target.files[0])\r\n            });\r\n        }\r\n        this.previewingProfilePic = true;\r\n    };\r\n    submitProfilePic = () => {\r\n        const props = this.props;\r\n        const file = this.state.imageFile;\r\n        props.saveNewProfilePic(file, props.authToken, props.targetUser, props.activeUser.profilePic);\r\n        this.closeProfilePicPreview();\r\n    };\r\n    closeProfilePicPreview = () => {\r\n        this.previewingProfilePic = false;\r\n        this.setState({\r\n            imageFile: null,\r\n            imagePreviewUrl: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const state = this.state;\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n        const targetUser = props.targetUser;\r\n        const authToken = props.authToken;\r\n        const activeUser = props.activeUser.uuid;\r\n        const userProfile = props.userProfileRepo[targetUser];\r\n        if(userProfile === undefined) {\r\n            return (<div/>);\r\n        }\r\n\r\n        let postObjects;\r\n        let pageToken;\r\n        if(props.postRepo[targetUser] === undefined) {\r\n            postObjects = [];\r\n            pageToken = \"\"\r\n        } else {\r\n            postObjects = props.postRepo[targetUser].postObjects;\r\n            pageToken = props.postRepo[targetUser].pageToken;\r\n        }\r\n        const posts = (\r\n            <React.Fragment>\r\n                {postObjects.map((post, index) => (\r\n                    <Grid key={index} item>\r\n                        <PostObject post={post} comments={post.comments} postKey={index}\r\n                                    owner={props.targetUser}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n                {pageToken === \"\" &&\r\n                    <div style={{minHeight: 350}}/>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n\r\n        const fullName = userProfile.firstName.charAt(0).toUpperCase()+userProfile.firstName.substring(1)+\" \"+\r\n            userProfile.lastName.charAt(0).toUpperCase()+userProfile.lastName.substring(1);\r\n        let relationshipActions = null;\r\n        switch (userProfile.relationshipStatus) {\r\n            case \"newUser\":\r\n                relationshipActions = (\r\n                    <div>\r\n                        <Button color=\"primary\" variant=\"contained\" className={classes.addFriendButton}\r\n                                onClick={()=>props.sendFriendRequest(authToken, targetUser)}\r\n                        >\r\n                            <AddFriendIcon className={classes.addFriendIcon}/>\r\n                            Add Friend\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"youRequestedFriendShip\":\r\n                relationshipActions = (\r\n                    <div>\r\n                        <Button variant=\"contained\" className={classes.greyStyle}\r\n                                onClick={(e)=>{props.openPopout(e.currentTarget,\r\n                                    <Paper>\r\n                                        <MenuList>\r\n                                            <MenuItem className={classes.popoutButton}\r\n                                                      onClick={()=>{\r\n                                                          props.deleteFriendRequest(authToken, activeUser, targetUser)\r\n                                                      }}\r\n                                            >\r\n                                                Delete Friend Request\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                    </Paper>\r\n                                )}}\r\n                        >\r\n                            Request Sent\r\n                            <DropIcon className={classes.dropIcon}/>\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"theyRequestedFriendship\":\r\n                relationshipActions = (\r\n                    <span>\r\n                            <Button onClick={()=>props.respondToRequest(authToken, props.activeUser.uuid,\r\n                                targetUser, \"accepted\")} className={classes.addFriendButton} color=\"primary\" variant=\"contained\">\r\n                                <AddFriendIcon className={classes.addFriendIcon}/>\r\n                                Add Friend\r\n                            </Button>\r\n                            <Button onClick={()=>props.respondToRequest(authToken, props.activeUser.uuid,\r\n                                targetUser, \"ignored\")} className={classes.greyStyle} variant=\"contained\">\r\n                                Ignore\r\n                            </Button>\r\n                        </span>\r\n                );\r\n                break;\r\n            case \"friends\":\r\n                relationshipActions = (\r\n                    <div>\r\n                        <Button color=\"primary\" variant=\"contained\" className={classes.friendsButton}\r\n                                onClick={(e)=>{props.openPopout(e.currentTarget,\r\n                                    <Paper>\r\n                                        <MenuList>\r\n                                            <MenuItem className={classes.popoutButton}\r\n                                                      onClick={()=>props.unfriend(authToken, targetUser)}\r\n                                            >\r\n                                                Unfriend\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                    </Paper>\r\n                                )}}\r\n                        >\r\n                            Friends\r\n                            <DropIcon className={classes.dropIcon}/>\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"ignored\":\r\n                relationshipActions = (\r\n                    <div>\r\n                        <Button variant=\"contained\" className={classes.ignoredButton}\r\n                                onClick={(e)=>{props.openPopout(e.currentTarget,\r\n                                    <Paper>\r\n                                        <MenuList>\r\n                                            <MenuItem className={classes.popoutButton}\r\n                                                      onClick={()=>props.respondToRequest(authToken,\r\n                                                          props.activeUser.uuid, targetUser, \"accepted\")}\r\n                                            >\r\n                                                Accept Friend Request\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                    </Paper>\r\n                                )}}\r\n                        >\r\n                            Ignored\r\n                            <DropIcon className={classes.dropIcon}/>\r\n                        </Button>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n\r\n        }\r\n\r\n\r\n        let profilePicture = (\r\n            <ProfilePic styleOverride={classes.profilePicture} userFirstName={userProfile.firstName} userUuid={targetUser} s3ImageUri={userProfile.profilePicUri}/>\r\n        );\r\n        if(targetUser === props.activeUser.uuid) {\r\n            profilePicture = (\r\n                <div>\r\n                    <input style={{display: 'none'}} type=\"file\" name=\"postImage\" accept=\".jpg, .jpeg, .png\"\r\n                           onChange={this.previewProfilePic} ref={fileInput => this.fileInput = fileInput}\r\n                    />\r\n                    <div onClick={()=>this.fileInput.click()}>\r\n                        <ProfilePic styleOverride={classes.profilePicture}\r\n                                    userFirstName={userProfile.firstName} userUuid={targetUser}\r\n                                    s3ImageUri={userProfile.profilePicUri} clickable={false}\r\n                                    noPicOverrideMessage={\"Click here to set a picture\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n            if(state.imagePreviewUrl !== '') {\r\n                profilePicture = (\r\n                    <Avatar className={classes.profilePicture} src={state.imagePreviewUrl}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        let editBioButton = (<div/>);\r\n        if(targetUser === activeUser) {\r\n            editBioButton = (\r\n                <Button variant=\"contained\" className={classes.editButtons} onClick={this.editBio}>\r\n                    Edit\r\n                </Button>\r\n            );\r\n        }\r\n        const bioBox = (\r\n            <div ref={this.setBioBoxRef}>\r\n                <Card className={classes.bioBox}>\r\n                    <CardHeader title={'Bio'} action={editBioButton}/>\r\n                    {\r\n                        state.editingBio ?\r\n                            (\r\n                                <div>\r\n                                    <TextField className={classes.textField} placeholder=\"What's up?\" multiline={true}\r\n                                               fullWidth={true} variant=\"outlined\" autoFocus={true} rowsMax={6}\r\n                                               maxLength={500} name=\"newBioContent\" onChange={this.onChange}\r\n                                               value={state.newBioContent}\r\n                                    />\r\n                                    <Grid container direction=\"column\" alignContent=\"center\">\r\n                                        <Button variant=\"contained\"  className={classes.editButtons} onClick={this.onSubmit}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            ):(\r\n                                <CardContent className={classes.textField}>\r\n                                    {userProfile.bio}\r\n                                </CardContent>\r\n                            )\r\n                    }\r\n                </Card>\r\n            </div>\r\n        );\r\n        // Gallery is temporarily disabled\r\n        // const photosBox = (\r\n        //     <Card className={classes.photosBox}>\r\n        //         <CardHeader className={classes.boxHeader} title={'Photos'}/>\r\n        //         <CardContent className={classes.boxContent}>\r\n        //             <Grid container spacing={8} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        //                 {[1,2,3,4,5,6,7,8,9].map(id => (\r\n        //                     <Grid key={id} item className={classes.boxPicItemContainer}>\r\n        //                         <img src={profilePic} className={classes.boxPicItem}/>\r\n        //                     </Grid>\r\n        //                 ))}\r\n        //             </Grid>\r\n        //         </CardContent>\r\n        //     </Card>\r\n        // );\r\n\r\n        const friendsBox = (\r\n            <FriendsBox targetUser={props.targetUser} targetFirstName={userProfile.firstName}/>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Dialog open={this.previewingProfilePic} onClose={this.closeProfilePicPreview}>\r\n                    <DialogTitle>Would you like this as your profile picture?</DialogTitle>\r\n                    <Button onClick={this.submitProfilePic}>Yes</Button>\r\n                    <Button onClick={this.closeProfilePicPreview} color=\"primary\">No</Button>\r\n                </Dialog>\r\n                <Grid item container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n                    <Grid item container spacing={8} className={classes.sideColumn}\r\n                          direction=\"column\" justify=\"flex-start\" alignItems=\"center\" >\r\n                        <Grid item>\r\n                            {profilePicture}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {bioBox}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {friendsBox}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item container className={classes.postsColumn}\r\n                          direction=\"column\" justify=\"flex-start\" alignItems=\"center\" >\r\n                        <Grid item container className={classes.nameContainer} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Grid item className={classes.profileName}>\r\n                                {fullName}\r\n                            </Grid>\r\n                            <Grid item xs/>\r\n                            <Grid item>\r\n                                {relationshipActions}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <PostForm targetUser={props.targetUser}/>\r\n                        {posts}\r\n                    </Grid>\r\n                    <Grid item container spacing={8} className={classes.sideColumn}\r\n                          direction=\"column\" justify=\"flex-start\" alignItems=\"center\"\r\n                    />\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserProfile.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    fetchUserPosts: PropTypes.func.isRequired,\r\n    fetchUserProfile: PropTypes.func.isRequired,\r\n    sendFriendRequest: PropTypes.func.isRequired,\r\n    deleteFriendRequest: PropTypes.func.isRequired,\r\n    respondToRequest: PropTypes.func.isRequired,\r\n    unfriend: PropTypes.func.isRequired,\r\n    openPopout: PropTypes.func.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    saveNewBio: PropTypes.func.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    activeUser: PropTypes.object.isRequired,\r\n    updatePostTrigger: PropTypes.bool.isRequired,\r\n    targetUser: PropTypes.string.isRequired,\r\n    postRepo: PropTypes.object.isRequired,\r\n    userProfileRepo: PropTypes.object,\r\n    saveNewProfilePic: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps,\r\n    {\r\n        saveNewBio, unfriend, sendFriendRequest, openPopout, fetchUserPosts, fetchUserProfile, deleteFriendRequest,\r\n        respondToRequest, navigateTo, saveNewProfilePic\r\n    }\r\n    ))(UserProfile);","import {FETCH_USER_PROFILE, NEW_BIO, NEW_PROFILE_PIC, USER_SEARCH} from \"./types\";\r\n\r\nexport const searchUsers = (searchText, authToken) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append(\"Authorization\", authToken);\r\n    headers.append(\"searchText\", searchText);\r\n\r\n    let re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if(searchText.length === 36) {\r\n        headers.append(\"searchBy\", \"uuid\");\r\n    } else if(re.test(String(searchText).toLowerCase()) && searchText.length < 200) {\r\n        headers.append(\"searchBy\", \"email\");\r\n    } else {\r\n        headers.append(\"searchBy\", \"name\");\r\n    }\r\n\r\n    fetch(\"/users/search\", {\r\n        method: \"GET\",\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json()\r\n            .then(searchResults => {\r\n                dispatch({\r\n                    type: USER_SEARCH,\r\n                    payload: searchResults\r\n                })\r\n            })\r\n    })\r\n};\r\n\r\nexport const fetchUserProfile = (targetUser, authToken) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append(\"Authorization\", authToken);\r\n    fetch(\"/users/\"+targetUser, {\r\n        method: \"GET\",\r\n        headers: headers\r\n    }).then(res => {\r\n        res.json()\r\n            .then(profile => {\r\n                dispatch({\r\n                    type: FETCH_USER_PROFILE,\r\n                    payload: {\r\n                        targetUser: targetUser,\r\n                        profileData: profile[0]\r\n                    }\r\n                })\r\n            })\r\n    })\r\n};\r\n\r\nexport const saveNewBio = (authToken, activeUser, bio) => dispatch => {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n    headers.append('Content-Type', 'text/plain');\r\n\r\n    fetch(\"/users/\"+activeUser+\"/bio\", {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: bio\r\n    }).then(response => {\r\n        if(response.status === 200) {\r\n            dispatch({\r\n                type: NEW_BIO,\r\n                payload: {\r\n                    targetUser: activeUser,\r\n                    newBioContent: bio\r\n                }\r\n            })\r\n        }\r\n    });\r\n};\r\n\r\nexport const saveNewProfilePic = (file, authToken, targetUser, currentProfilePicUri) => dispatch => {\r\n    let data = new FormData();\r\n    data.append('image', file);\r\n    let headers = new Headers();\r\n    headers.append('Authorization', authToken);\r\n\r\n    fetch('/users/'+targetUser+'/profile-pic', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: headers\r\n    }).then(response => {\r\n        response.text().then(s3ImgUri => {\r\n            dispatch({\r\n                type: NEW_PROFILE_PIC,\r\n                payload: {\r\n                    s3ImgUri: s3ImgUri,\r\n                    localImgUrl: URL.createObjectURL(file),\r\n                    targetUser: targetUser,\r\n                    currentProfilePicUri: currentProfilePicUri\r\n                }\r\n            })\r\n        })\r\n    });\r\n};\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {fetchNewsFeed} from \"../../actions/postActions\";\r\nimport PostObject from \"../PostComponents/PostObject\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PostForm from \"../PostComponents/PostForm\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        paddingTop: 8\r\n    },\r\n    postsColumn: {\r\n        width: 500\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    newsFeedPostLookup: state.posts.newsFeedPostLookup,\r\n    newsFeedToken: state.posts.newsFeedToken,\r\n    postRepo: state.posts,\r\n    updatePostTrigger: state.posts.updatePostTrigger,\r\n    authToken: state.accountAccess.authToken,\r\n    activeUserUuid: state.accountAccess.activeUser.uuid\r\n});\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.shouldFetch = false;\r\n\r\n        this.startScrollListening = this.startScrollListening.bind(this);\r\n        this.stopScrollListening = this.stopScrollListening.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.newsFeedToken === \"0\"){\r\n            this.props.fetchNewsFeed(this.props.activeUserUuid, this.props.authToken, this.props.newsFeedToken);\r\n        }\r\n        this.startScrollListening();\r\n    }\r\n    componentWillUnmount() {\r\n        this.stopScrollListening();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.newsFeedToken !== prevProps.newsFeedToken) {\r\n            this.shouldFetch = true;\r\n        }\r\n    }\r\n\r\n    startScrollListening = () => {\r\n        window.addEventListener('scroll', this.handleScroll, false)\r\n    };\r\n    stopScrollListening = () => {\r\n        window.removeEventListener('scroll', this.handleScroll, false)\r\n    };\r\n    handleScroll = () => {\r\n        if ((window.innerHeight+window.pageYOffset+400) >= document.body.offsetHeight) {\r\n            if(this.shouldFetch) {\r\n                this.props.fetchNewsFeed(this.props.activeUserUuid, this.props.authToken, this.props.newsFeedToken);\r\n                this.shouldFetch = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const props = this.props;\r\n\r\n        let postObjects = [];\r\n        props.newsFeedPostLookup.forEach((lookupData) => {\r\n            let feedPost = props.postRepo[lookupData.userUuid].postObjects[lookupData.postKey];\r\n            feedPost.postKey = lookupData.postKey;\r\n            postObjects.push(feedPost);\r\n        });\r\n\r\n        const posts = (\r\n            <React.Fragment>\r\n                {postObjects.map((feedPost, index) => (\r\n                    <Grid key={index} item>\r\n                        <PostObject post={feedPost} comments={feedPost.comments} postKey={feedPost.postKey}\r\n                                    owner={feedPost.userUuid}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n                {props.newsFeedToken === \"\" &&\r\n                <div style={{minHeight: 350}}/>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\r\n                    <Grid item container spacing={8} className={classes.postsColumn}\r\n                          direction=\"column\" justify=\"flex-start\" alignItems=\"center\"\r\n                    >\r\n                        <PostForm targetUser={props.activeUserUuid}/>\r\n                        {posts}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    newsFeedPostLookup: PropTypes.array.isRequired,\r\n    newsFeedToken: PropTypes.string.isRequired,\r\n    postRepo: PropTypes.object.isRequired,\r\n    updatePostTrigger: PropTypes.bool.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    activeUserUuid: PropTypes.string.isRequired,\r\n    fetchNewsFeed: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {fetchNewsFeed}))(Home);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostObject from \"../PostComponents/PostObject\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        paddingTop: 8\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    notificationPostLookup: state.posts.notificationPostLookup,\r\n    postRepo: state.posts\r\n});\r\n\r\nclass NotificationPostPage extends Component {\r\n    render() {\r\n        const classes = this.props.classes;\r\n        const props = this.props;\r\n\r\n        let postObject = props.postRepo[props.notificationPostLookup.userUuid]\r\n                            .postObjects[props.notificationPostLookup.postKey];\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"flex-start\">\r\n                    <PostObject post={postObject} comments={postObject.comments}\r\n                                owner={postObject.owner} postKey={props.notificationPostLookup.postKey}\r\n                    />\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationPostPage.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    notificationPostLookup: PropTypes.object.isRequired,\r\n    postRepo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, null))(NotificationPostPage);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AccountCreator from \"../AccountAccess/AccountCreator\";\r\nimport LoginComponent from \"../AccountAccess/LoginComponent\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport Home from \"./Home\";\r\nimport NotificationPostPage from \"./NotificationPostPage\";\r\n\r\nconst mapStateToProps = state => ({\r\n    displayPage: state.navigation.displayPage,\r\n    isLoggedIn: state.accountAccess.isLoggedIn\r\n});\r\n\r\nclass DisplayArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n        this.display = 'create_account';\r\n    };\r\n\r\n    render() {\r\n        switch (this.props.displayPage) {\r\n            case 'create_account':\r\n                this.display = (\r\n                    <AccountCreator/>\r\n                );\r\n                break;\r\n            case 'login':\r\n                if(this.props.isLoggedIn) {\r\n                    this.display = (\r\n                        <Home/>\r\n                    )\r\n                } else {\r\n                    this.display = (\r\n                        <LoginComponent/>\r\n                    );\r\n                }\r\n                break;\r\n            case 'home':\r\n                this.display = (\r\n                    <Home/>\r\n                );\r\n                break;\r\n            // case 'about': This will be a page about the simple social network, myself and\r\n            //               some of the things I've learned while building it\r\n            //     displayPage = (\r\n            //\r\n            //     );\r\n            //     break;\r\n            case 'notificationPost':\r\n                this.display = (\r\n                    <NotificationPostPage/>\r\n                );\r\n                break;\r\n            default: //displays the user profile\r\n                this.display = (\r\n                    <UserProfile targetUser={this.props.displayPage}/>\r\n                );\r\n        }\r\n        return (\r\n            <div>\r\n                {this.display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDisplayArea.propTypes = {\r\n    displayPage: PropTypes.string.isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(DisplayArea);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/es/Paper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {logout} from \"../../actions/accountAccessActions\";\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\n\r\nconst styles = theme => ({\r\n    menuBackground: {\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        maxWidth: 200\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nclass OptionsMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.logout = this.logout.bind(this);\r\n    };\r\n\r\n    logout = () => {\r\n        this.props.logout();\r\n        this.props.navigateTo('login');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Paper className={this.props.classes.menuBackground}>\r\n                    <MenuList>\r\n                        {/*<MenuItem>Settings</MenuItem>*/}\r\n                        {/*<MenuItem>About Simple Social</MenuItem>*/}\r\n                        <MenuItem onClick={this.logout}>Logout</MenuItem>\r\n                    </MenuList>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nOptionsMenu.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    navigateTo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {logout, navigateTo}))(OptionsMenu);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {fetchPost} from \"../../actions/postActions\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\n\r\nconst styles = theme => ({\r\n    notification: {\r\n        padding: 0,\r\n        width: 450\r\n    },\r\n    notificationTitle: {\r\n        fontSize: 18,\r\n        color: theme.palette.primary.main\r\n    },\r\n    avatar: {\r\n        color: theme.palette.secondary,\r\n        backgroundColor: theme.palette.primary,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    activeUserUuid: state.accountAccess.activeUser.uuid,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass NotificationItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let howLongAgo = Date.now() - props.notification.when;\r\n        let happenedWhen;\r\n        if(howLongAgo < 180000) {\r\n            happenedWhen = 'Just now';\r\n        } else if(howLongAgo < 3.6*10**6) {\r\n            let mins = Math.floor(howLongAgo/60000);\r\n            happenedWhen = mins.toString()+' min ago';\r\n        } else if(howLongAgo < 8.64*10**7) {\r\n            let hrs = Math.floor(howLongAgo/(3.6*10**6));\r\n            happenedWhen = hrs.toString()+' hrs ago';\r\n        } else if(howLongAgo < 1.728*10**8) {\r\n            happenedWhen = 'Yesterday';\r\n        } else {\r\n            happenedWhen = new Date(props.notification.when).toDateString();\r\n        }\r\n\r\n        this.state = {\r\n            happenedWhen: happenedWhen\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n        const notification = props.notification;\r\n        const notificationAvatar = (//needs to be imported from the notification object\r\n                <ProfilePic s3ImageUri={notification.actionUserS3Uri} userFirstName={notification.actionUserFirstName}/>\r\n        );\r\n\r\n        const firstName = (\r\n            <span>\r\n                {notification.actionUserFirstName.charAt(0).toUpperCase()+notification.actionUserFirstName.substring(1)}\r\n            </span>\r\n        );\r\n\r\n        let notificationTitle = (<div/>);\r\n        switch (notification.type) {\r\n            case \"wallPost\":\r\n                notificationTitle = (\r\n                    <div className={classes.notificationTitle}>\r\n                        {firstName}\r\n                        <span>\r\n                            {\" posted on your profile\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"postComment\":\r\n                notificationTitle = (\r\n                    <div className={classes.notificationTitle}>\r\n                        {firstName}\r\n                        <span>\r\n                            {\" commented on your post\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"postLike\":\r\n                notificationTitle = (\r\n                    <div className={classes.notificationTitle}>\r\n                        {firstName}\r\n                        <span>\r\n                            {\" liked your post\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"commentLike\":\r\n                notificationTitle = (\r\n                    <div className={classes.notificationTitle}>\r\n                        {firstName}\r\n                        <span>\r\n                            {\" liked your comment\"}\r\n                        </span>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                notificationTitle = (<div/>);\r\n        }\r\n\r\n        return (\r\n            <div onClick={()=>props.fetchPost(notification.postUuid, notification.postOwner, props.authToken)}>\r\n                <CardHeader className={classes.notification} avatar={notificationAvatar}\r\n                            title={notificationTitle} subheader={this.state.happenedWhen}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationItem.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    activeUserUuid: PropTypes.string.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    notification: PropTypes.object\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {fetchPost}))(NotificationItem);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport NotificationItem from \"./NotificationItem\";\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport 'simplebar';\r\nimport 'simplebar/dist/simplebar.css';\r\n\r\nimport {fetchNotifications} from \"../../actions/accountAccessActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/es/Avatar\";\r\nimport SadFace from \"@material-ui/icons/SentimentDissatisfiedRounded\";\r\nimport CardHeader from \"@material-ui/core/es/CardHeader\";\r\n\r\nconst styles = theme => ({\r\n    menuBackground: {\r\n        width: 450,\r\n        maxHeight: 400\r\n    },\r\n    menuItem: {\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n    },\r\n    scrollable: {\r\n        width: 450,\r\n        maxHeight: 400,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n    },\r\n    loadMoreNotificationsButton: {\r\n        cursor: \"pointer\",\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 14,\r\n        color: theme.palette.primary[\"500\"],\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    title: {\r\n        cursor: \"pointer\",\r\n        paddingTop: 0,\r\n        marginBottom: -4,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 16,\r\n        color: theme.palette.grey[\"500\"]\r\n    },\r\n    subheader: {\r\n        fontFamily: 'PTSanseCaptionRegular',\r\n        fontSize: 16,\r\n        marginTop: -6,\r\n        color: theme.palette.primary.main\r\n    },\r\n    avatar: {\r\n        color: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.grey[\"500\"],\r\n        marginRight: -8\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.accountAccess.notifications,\r\n    notificationsPageToken: state.accountAccess.notificationsPageToken,\r\n    activeUserUuid: state.accountAccess.activeUser.uuid,\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass NotificationsMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            trigger: false\r\n        };\r\n\r\n        this.waitToRender = props.notifications.length === 0 && props.notificationsPageToken !== \"\";\r\n        this.waitForTrigger = false;\r\n        this.fetchNotifications = this.fetchNotifications.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        if(props.notifications.length === 0 && props.notificationsPageToken !== \"\") {\r\n            props.fetchNotifications(props.authToken, props.activeUserUuid, props.notificationsPageToken);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.waitForTrigger) {\r\n            this.waitForTrigger = false;\r\n            this.setState({\r\n                trigger: !this.state.trigger\r\n            })\r\n        }\r\n    }\r\n\r\n    fetchNotifications = () => {\r\n        const props = this.props;\r\n        this.waitForTrigger = true;\r\n        this.waitToRender = true;\r\n        props.fetchNotifications(props.authToken, props.activeUserUuid, props.notificationsPageToken);\r\n    };\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n\r\n        if(this.waitToRender) {\r\n            this.waitToRender = false;\r\n            return (\r\n                <Paper className={classes.menuBackground}/>\r\n            );\r\n        }\r\n        let notificationsItems;\r\n        if(props.notifications.length === 0) {\r\n            notificationsItems = (\r\n                <CardHeader avatar={<Avatar className={classes.avatar} children={<SadFace style={{width: 32, height: 32}}/>}/>} title={<div className={classes.title}>No notifications</div>} subheader={<div className={classes.subheader}>so far...</div>}/>\r\n            )\r\n        } else {\r\n            notificationsItems = (\r\n                <MenuList data-simplebar className={classes.scrollable}>\r\n                    {props.notifications.map((notification, index) => (\r\n                        <MenuItem key={index} className={classes.menuItem}>\r\n                            <NotificationItem notification={notification}/>\r\n                        </MenuItem>\r\n                    ))}\r\n                    {\r\n                        props.notificationsPageToken !== \"\" &&\r\n                        <Grid item container direction=\"row\" justify=\"center\" className={classes.loadMoreNotificationsButton} onClick={this.fetchNotifications}>\r\n                            {\"Load More Notifications\"}\r\n                        </Grid>\r\n                    }\r\n                </MenuList>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Paper className={classes.menuBackground}>\r\n                {notificationsItems}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationsMenu.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    notifications: PropTypes.array.isRequired,\r\n    notificationsPageToken: PropTypes.string.isRequired,\r\n    activeUserUuid: PropTypes.string.isRequired,\r\n    authToken: PropTypes.string.isRequired,\r\n    fetchNotifications: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {fetchNotifications}))(NotificationsMenu);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SearchIcon from \"@material-ui/icons/SearchRounded\";\r\nimport InputBase from \"@material-ui/core/es/InputBase\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport {searchUsers} from \"../../actions/userActions\";\r\n\r\nconst styles = theme => ({\r\n    componentContainer: {\r\n        width: 400\r\n    },\r\n    textField: {\r\n        paddingLeft: 16,\r\n        fontFamily: 'PTSansRegular',\r\n        fontSize: 16,\r\n        color: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    authToken: state.accountAccess.authToken\r\n});\r\n\r\nclass UserSearcher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n\r\n        this.input = null;\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.input = document.getElementById(\"userSearch\");\r\n        this.input.addEventListener(\"keyup\", (e)=>{\r\n            if(e.code === \"Enter\") {\r\n                this.onSubmit();\r\n            }\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.input.removeEventListener(\"keyup\", (e)=>{\r\n            if(e.code === \"Enter\") {\r\n                this.onSubmit();\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n    onSubmit = () => {\r\n        if(this.state.text.length < 1) {\r\n            return;\r\n        }\r\n        this.props.searchUsers(this.state.text, this.props.authToken);\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.componentContainer}>\r\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n\r\n                    <Grid xs item>\r\n                            <InputBase className={classes.textField} placeholder=\"Search by email or name\"\r\n                                       multiline={false} fullWidth={true} autoComplete=\"off\" name=\"text\"\r\n                                       onChange={this.onChange} value={this.state.text} id={\"userSearch\"}\r\n                            />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={this.onSubmit} disableRipple={true} color=\"primary\">\r\n                            <SearchIcon/>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserSearcher.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    searchUsers: PropTypes.func.isRequired,\r\n    authToken: PropTypes.string.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {searchUsers}))(UserSearcher);","import React, {Component} from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {fetchFriendRequests, fetchUserFriends} from \"../../actions/friendActions\";\r\nimport 'simplebar';\r\nimport 'simplebar/dist/simplebar.css';\r\nimport Paper from \"@material-ui/core/es/Paper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FriendMenuItem from \"./FriendMenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport UserSearcher from \"./UserSearcher\";\r\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\r\nimport CardHeader from \"@material-ui/core/es/CardHeader/CardHeader\";\r\nimport Avatar from \"@material-ui/core/es/Avatar/Avatar\";\r\nimport SadFace from \"@material-ui/icons/SentimentDissatisfiedRounded\";\r\n\r\nconst styles = theme => ({\r\n    menuBackground: {\r\n        paddingTop: 0,\r\n        paddingBottom: 8,\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        width: 400\r\n    },\r\n    menuItem: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n        paddingLeft: 12,\r\n        paddingRight: 12\r\n    },\r\n    scrollable: {\r\n        width: 400,\r\n        maxHeight: 400,\r\n        padding: 0\r\n    },\r\n    sectionTitle: {\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        paddingLeft: 16,\r\n        fontFamily: 'PTSansCaptionRegular',\r\n        fontSize: 14,\r\n        color: theme.palette.primary.main\r\n    },\r\n    title: {\r\n        cursor: \"pointer\",\r\n        paddingTop: 0,\r\n        marginBottom: -4,\r\n        fontFamily: 'PTSansCaptionBold',\r\n        fontSize: 16,\r\n        color: theme.palette.grey[\"500\"]\r\n    },\r\n    subheader: {\r\n        fontFamily: 'PTSanseCaptionRegular',\r\n        fontSize: 16,\r\n        marginTop: -6,\r\n        color: theme.palette.primary.main\r\n    },\r\n    avatar: {\r\n        color: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.grey[\"500\"],\r\n        marginRight: -8\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    friendRequests: state.friendAccess.friendRequests,\r\n    requestPageToken: state.friendAccess.requestPageToken,\r\n    userSearchResults: state.users.userSearchResults,\r\n    authToken: state.accountAccess.authToken,\r\n    activeUserUuid: state.accountAccess.activeUser.uuid,\r\n    updateTrigger: state.friendAccess.friendsMenuTrigger,\r\n    friendRepo: state.friendAccess\r\n});\r\n\r\nclass FriendsMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userSearchResults: []\r\n        };\r\n\r\n        this.waitToRender = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        if(props.requestPageToken === \"0\") {\r\n            props.fetchFriendRequests(props.authToken, props.activeUserUuid, \"0\");\r\n        }\r\n        if(props.friendRepo[props.activeUserUuid] === undefined) {\r\n            props.fetchUserFriends(props.authToken, props.activeUserUuid, \"0\");\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.userSearchResults !== prevProps.userSearchResults) {\r\n            this.setState({\r\n                userSearchResults: this.props.userSearchResults\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.waitToRender) {\r\n            this.waitToRender = false;\r\n            return (<div/>);\r\n        }\r\n        const props = this.props;\r\n        const classes = props.classes;\r\n        const userSearchResults = this.state.userSearchResults;\r\n        const friendRequests = props.friendRequests;\r\n\r\n        let searchItems = null;\r\n        if(userSearchResults.length > 0) {\r\n            this.waitToRender = true;\r\n            searchItems = (\r\n                <MenuList data-simplebar className={classes.scrollable}>\r\n                    {userSearchResults.map((result, index) => (\r\n                        <MenuItem key={index} className={classes.menuItem}>\r\n                            <FriendMenuItem userObject={result} type={\"search\"}/>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            )\r\n        }\r\n\r\n        let requestItems = null;\r\n        if(friendRequests.length > 0) {\r\n            requestItems = (\r\n                <MenuList data-simplebar className={classes.scrollable}>\r\n                    {friendRequests.map((request, index) => (\r\n                        <MenuItem key={index} className={classes.menuItem}>\r\n                            <FriendMenuItem userObject={request} type={request.type} requestKey={index}/>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            )\r\n        } else {\r\n            requestItems = (\r\n                <CardHeader avatar={<Avatar className={classes.avatar} children={<SadFace style={{width: 32, height: 32}}/>}/>} title={<div className={classes.title}>No new friend requests</div>} subheader={<div className={classes.subheader}>yet...</div>}/>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Paper className={classes.menuBackground}>\r\n                    <Grid container direction=\"column\" justify=\"flex-start\" alignContent=\"flex-start\">\r\n                        <div className={classes.sectionTitle}>\r\n                            Lookup Users\r\n                        </div>\r\n                        <Divider/>\r\n                        <UserSearcher/>\r\n                        {searchItems}\r\n                        <Divider/>\r\n                        <div className={classes.sectionTitle}>\r\n                            Friend Requests\r\n                        </div>\r\n                        <Divider/>\r\n                        {requestItems}\r\n                        <Divider/>\r\n                    </Grid>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nFriendsMenu.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    friendRepo: PropTypes.object.isRequired,\r\n    friendRequests: PropTypes.array.isRequired,\r\n    userSearchResults: PropTypes.array.isRequired,\r\n    activeUserUuid: PropTypes.string.isRequired,\r\n    updateTrigger: PropTypes.bool.isRequired,\r\n    fetchFriendRequests: PropTypes.func.isRequired,\r\n    fetchUserFriends: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {fetchFriendRequests, fetchUserFriends}))(FriendsMenu);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {navigateTo} from \"../../actions/navigationActions\";\r\nimport {openPopout} from \"../../actions/popoutActions\";\r\nimport {updateActiveUser} from \"../../actions/accountAccessActions\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FriendsIcon from '@material-ui/icons/People';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nimport logo from '../../static/Simple Social Network.svg';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport NotificationsMenu from \"./NotificationsMenu\";\r\nimport FriendsMenu from \"./FriendsMenu\";\r\nimport ProfilePic from \"../ImageComponents/ProfilePic\";\r\nimport compose from \"recompose/compose\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\n\r\nconst styles = {\r\n    headerStyles: {\r\n        minWidth: 500,\r\n        maxWidth: 1100,\r\n        padding: 0\r\n    },\r\n    logoButton: {\r\n        width: 200,\r\n        borderRadius: 16,\r\n        padding: 8\r\n    },\r\n    dropIcon: {\r\n        padding: 0,\r\n        margin: 5,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    icon: {\r\n        margin: 5\r\n    },\r\n    chatIcon: {\r\n        width: 24,\r\n        height: 22,\r\n        marginBottom: 1,\r\n        marginTop: 1\r\n    },\r\n    userFirstName: {\r\n        paddingLeft: 5\r\n    },\r\n    homeButton: {\r\n        height: 45,\r\n        margin: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    userAvatar: {\r\n        maxWidth: 30,\r\n        maxHeight: 30,\r\n        color: yellow[500],\r\n        backgroundColor: deepPurple[500]\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    accountCreated: state.accountAccess.accountCreated,\r\n    isLoggedIn: state.accountAccess.isLoggedIn,\r\n    authToken: state.accountAccess.authToken,\r\n    activeUser: state.accountAccess.activeUser,\r\n    updates: state.accountAccess.updates\r\n});\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userFirstName: '',\r\n            loggedIn: false,\r\n            numOfNewFriendRequests: 0,\r\n            numOfNewNotifications: 0\r\n        };\r\n\r\n        this.intervalVar = null;\r\n\r\n        this.openFriendsFinder = this.openFriendsFinder.bind(this);\r\n        this.openNotifications = this.openNotifications.bind(this);\r\n        this.goHome = this.goHome.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const props = this.props;\r\n\r\n        if(prevProps.accountCreated !== props.accountCreated) {\r\n            if(props.accountCreated) {\r\n                props.navigateTo('login');\r\n            }\r\n        }\r\n        if(prevProps.isLoggedIn !== props.isLoggedIn) {\r\n            if(props.isLoggedIn) {\r\n                //render the user icons header\r\n                this.setState({\r\n                    loggedIn: true,\r\n                    userFirstName: this.props.activeUser.firstName\r\n                });\r\n                props.navigateTo(props.activeUser.uuid);\r\n                //do fetch update from here\r\n                props.updateActiveUser(props.authToken, props.activeUser.uuid);\r\n                this.intervalVar = setInterval(()=>props.updateActiveUser(props.authToken, props.activeUser.uuid), 60000);\r\n            } else {\r\n                //render the login header\r\n                this.setState({\r\n                    loggedIn: false\r\n                }, ()=>{\r\n                    props.navigateTo('login');\r\n                });\r\n                if(this.intervalVar !== null) {\r\n                    clearInterval(this.intervalVar);\r\n                    this.intervalVar = null;\r\n                }\r\n            }\r\n        }\r\n        if(props.updates !== prevProps.updates) {\r\n            if(props.updates.numOfNewFriendRequests !== undefined) {\r\n                this.setState({\r\n                    numOfNewFriendRequests: this.props.updates.numOfNewFriendRequests,\r\n                    numOfNewNotifications: this.props.updates.numOfNewNotifications\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    numOfNewFriendRequests: 0,\r\n                    numOfNewNotifications: 0\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    openFriendsFinder = (e) => {\r\n        this.props.openPopout(e.currentTarget, <FriendsMenu/>, 80);\r\n        this.setState({\r\n            numOfNewFriendRequests: 0\r\n        })\r\n    };\r\n    openNotifications = (e) => {\r\n        this.props.openPopout(e.currentTarget, <NotificationsMenu/>, 33);\r\n        this.setState({\r\n            numOfNewNotifications: 0\r\n        })\r\n    };\r\n    goHome = () => {\r\n        if(this.props.isLoggedIn) {\r\n            this.props.navigateTo('home');\r\n        } else {\r\n            this.props.navigateTo('login');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const state = this.state;\r\n        const props = this.props;\r\n\r\n        const renderLogin = (\r\n            <React.Fragment>\r\n                <Grid item container xs={3} justify=\"flex-end\" alignItems=\"center\">\r\n                    <Button onClick={()=> {\r\n                        props.navigateTo('login')\r\n                    }} size=\"medium\" color=\"inherit\">Login</Button>\r\n                </Grid>\r\n                <Grid item container xs={3} justify=\"flex-start\" alignItems=\"center\">\r\n                    <Button onClick={()=> {\r\n                        props.navigateTo('create_account')\r\n                    }} size=\"medium\" color=\"inherit\">Join</Button>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n\r\n        let renderUserIcons = (<div/>);\r\n        if(props.activeUser !== null) {\r\n            renderUserIcons = (\r\n                <React.Fragment>\r\n                    <Grid item container xs={3} justify=\"flex-end\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Button onClick={()=>{\r\n                                props.navigateTo(props.activeUser.uuid)\r\n                            }} style={styles.homeButton} color=\"inherit\">\r\n                                <ProfilePic s3ImageUri={props.activeUser.profilePic} userFirstName={props.activeUser.firstName} styleOverride={props.classes.userAvatar} noButton={true}/>\r\n                                <Typography style={styles.userFirstName} color=\"inherit\">\r\n                                    {state.userFirstName}\r\n                                </Typography>\r\n                            </Button>\r\n                            <Button onClick={() => {\r\n                                props.navigateTo('home')\r\n                            }} style={styles.homeButton} size=\"medium\" color=\"inherit\">\r\n                                <Typography color=\"inherit\">\r\n                                    Home\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item container xs={3} justify=\"flex-start\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <IconButton onClick={this.openFriendsFinder} style={styles.icon} color=\"inherit\">\r\n                                <Badge badgeContent={state.numOfNewFriendRequests} color=\"secondary\">\r\n                                    <FriendsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        {/*Chat functionality is disabled for now*/}\r\n                        {/*<Grid item>*/}\r\n                        {/*    <IconButton onClick={(e)=>{*/}\r\n                        {/*        props.openPopout(e.currentTarget, <NotificationsMenu/>, 76)*/}\r\n                        {/*    }} style={styles.icon} color=\"inherit\">*/}\r\n                        {/*        <Badge badgeContent={4} color=\"secondary\">*/}\r\n                        {/*            <img src={chatIcon} alt=\"chat\" style={styles.chatIcon}/>*/}\r\n                        {/*        </Badge>*/}\r\n                        {/*    </IconButton>*/}\r\n                        {/*</Grid>*/}\r\n                        <Grid item>\r\n                            <IconButton onClick={this.openNotifications} style={styles.icon} color=\"inherit\">\r\n                                <Badge badgeContent={state.numOfNewNotifications} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton onClick={(e)=>{\r\n                                props.openPopout(e.currentTarget, <OptionsMenu/>)\r\n                            }} style={styles.dropIcon} color=\"secondary\">\r\n                                <DropIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                            <Grid item container spacing={0}  style={styles.headerStyles} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Grid item xs x1={2}/>\r\n                                <Grid item xs={2}>\r\n                                    <IconButton onClick={this.goHome} style={styles.logoButton}>\r\n                                        <img src={logo} alt=\"Logo\"/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs x1={2}/>\r\n\r\n                                {state.loggedIn ? (renderUserIcons):(renderLogin)}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.any.isRequired,\r\n    navigateTo: PropTypes.func.isRequired,\r\n    accountCreated: PropTypes.bool.isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    authToken: PropTypes.string,\r\n    openPopout: PropTypes.func.isRequired,\r\n    activeUser: PropTypes.object,\r\n    updates: PropTypes.object.isRequired,\r\n    updateActiveUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, {updateActiveUser, navigateTo, openPopout}))(Header);","import React from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\n\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    popper: {\r\n        zIndex: 1200,\r\n        '&[x-placement*=\"bottom\"] $arrow': {\r\n            top: 0,\r\n            left: 0,\r\n            marginTop: '-0.9em',\r\n            width: '3em',\r\n            height: '1em',\r\n            '&::before': {\r\n                borderWidth: '0 1em 1em 1em',\r\n                borderColor: `transparent transparent #ffffff transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"top\"] $arrow': {\r\n            bottom: 0,\r\n            left: 0,\r\n            marginBottom: '-0.9em',\r\n            width: '3em',\r\n            height: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 0 1em',\r\n                borderColor: `#ffffff transparent transparent transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"right\"] $arrow': {\r\n            left: 0,\r\n            marginLeft: '-0.9em',\r\n            height: '3em',\r\n            width: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 1em 0',\r\n                borderColor: `transparent #ffffff transparent transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"left\"] $arrow': {\r\n            right: 0,\r\n            marginRight: '-0.9em',\r\n            height: '3em',\r\n            width: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 0 1em 1em',\r\n                borderColor: `transparent transparent transparent #ffffff`,\r\n            },\r\n        },\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        fontSize: 8,\r\n        width: '3em',\r\n        height: '3em',\r\n        '&::before': {\r\n            content: '\"\"',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: 0,\r\n            height: 0,\r\n            borderStyle: 'solid',\r\n        },\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    anchorEl: state.popout.anchorElement,\r\n    content: state.popout.content,\r\n    offset: state.popout.offset,\r\n    trigger: state.popout.trigger,\r\n    displayPage: state.navigation.displayPage,\r\n    isLoggedIn: state.accountAccess.isLoggedIn\r\n});\r\n\r\nclass PopoutContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            trigger: false,\r\n            popoutRef: null,\r\n            arrowRef: null,\r\n        };\r\n\r\n        this.open = false;\r\n        this.anchorEl = null;\r\n        this.content = null;\r\n        this.offset = 0;\r\n\r\n        this.setArrowRef = this.setArrowRef.bind(this);\r\n        this.setPopoutRef = this.setPopoutRef.bind(this);\r\n        this.startClickListening = this.startClickListening.bind(this);\r\n        this.stopClickListening = this.stopClickListening.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.trigger !== this.props.trigger) {\r\n            if (this.anchorEl === this.props.anchorEl) {\r\n                this.open = !this.open;\r\n            } else {\r\n                this.open = true;\r\n            }\r\n\r\n            this.anchorEl = this.props.anchorEl;\r\n            this.content = this.props.content;\r\n            this.offset = this.props.offset;\r\n\r\n            this.setState({\r\n                trigger: !this.state.trigger\r\n            })\r\n        }\r\n        if(this.open && prevProps.displayPage !== this.props.displayPage) {\r\n            this.open = false;\r\n            this.setState({\r\n                trigger: !this.state.trigger,\r\n            });\r\n        }\r\n        if(!this.props.isLoggedIn) {\r\n\r\n                this.open = false;\r\n                this.anchorEl = null;\r\n                this.content = null;\r\n                this.offset = 0;\r\n        }\r\n    }\r\n\r\n    setArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        })\r\n    };\r\n    setPopoutRef = node => {\r\n        this.setState({\r\n            popoutRef: node\r\n        })\r\n    };\r\n\r\n    startClickListening = () => {\r\n        document.addEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    stopClickListening = () => {\r\n        document.removeEventListener('mouseup', this.handleClick, false);\r\n    };\r\n    handleClick = (e) => {\r\n        if (this.state.popoutRef.contains(e.target) || this.anchorEl.contains(e.target)) {\r\n            return;\r\n        }\r\n\r\n        this.open = false;\r\n        this.setState({\r\n            trigger: !this.state.trigger,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        if (this.open) {\r\n            this.startClickListening();\r\n        } else {\r\n            this.stopClickListening();\r\n        }\r\n\r\n        return (\r\n            <div ref={this.setPopoutRef}>\r\n                <Popper\r\n                    open={this.open}\r\n                    anchorEl={this.anchorEl}\r\n                    placement=\"bottom-end\"\r\n                    disablePortal={true}\r\n                    className={classes.popper}\r\n                    modifiers={{\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'scrollParent',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                            element: this.state.arrowRef,\r\n                        },\r\n                        offset: {\r\n                            enabled: true,\r\n                            offset: this.offset\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className={classes.arrow} ref={this.setArrowRef}/>\r\n                    {this.content}\r\n                </Popper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPopoutContainer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    anchorEl: PropTypes.any,\r\n    offset: PropTypes.number,\r\n    content: PropTypes.any,\r\n    trigger: PropTypes.bool.isRequired,\r\n    displayPage: PropTypes.string.isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps, null))(PopoutContainer);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {fetchImage} from \"../../actions/imageActions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    requestedImages: state.images.requestedImages,\r\n    requestCounterTrigger: state.images.requestCounterTrigger,\r\n    authToken: state.accountAccess.authToken,\r\n    isLoggedIn: state.accountAccess.isLoggedIn\r\n});\r\n\r\nclass ImageFetcher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetching = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const props = this.props;\r\n        if(props.requestCounterTrigger !== prevProps.requestCounterTrigger) {\r\n            if(props.requestedImages.length > 0) {\r\n                while(props.requestedImages.length > 0) {\r\n                    let request = props.requestedImages.shift();\r\n                    if(this.fetching[request.uri] === undefined) {\r\n                        this.fetching[request.uri] = true;\r\n                        props.fetchImage(request.uri, props.authToken, request.type);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(!props.isLoggedIn) {\r\n            this.fetching = {};\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div/>\r\n        );\r\n    }\r\n}\r\n\r\nImageFetcher.propTypes = {\r\n    requestedImages: PropTypes.array.isRequired,\r\n    requestCounterTrigger: PropTypes.number.isRequired,\r\n    fetchImage: PropTypes.func.isRequired,\r\n    authToken: PropTypes.string,\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchImage})(ImageFetcher);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport PropTypes from 'prop-types';\r\nimport {MuiThemeProvider, withStyles} from '@material-ui/core/styles';\r\nimport theme from './appTheme';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport DisplayArea from './components/Display/DisplayArea';\r\nimport NavigationHeader from './components/HeaderComponents/Header';\r\nimport PopoutContainer from './components/PopoutComponents/PopoutContainer';\r\nimport ImageFetcher from \"./components/ImageComponents/ImageFetcher\";\r\n\r\nconst styles = theme =>({\r\n    headerMargin: {\r\n        marginTop: 70\r\n    },\r\n    backgroundColor: theme.palette.background\r\n});\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <div className=\"App\">\r\n                        <NavigationHeader/>\r\n                        <div className={this.props.classes.headerMargin}/>\r\n                        <DisplayArea/>\r\n                        <PopoutContainer/>\r\n                        <ImageFetcher/>\r\n                    </div>\r\n                </MuiThemeProvider>\r\n            </Provider>\r\n        );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}